
proyecto_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000046  00800100  00001580  00001614  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001580  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000015  00800146  00800146  0000165a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000165a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016b8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  000016f8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012c8  00000000  00000000  000017e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000943  00000000  00000000  00002ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cb5  00000000  00000000  000033f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  000040a8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005c3  00000000  00000000  00004258  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000055d  00000000  00000000  0000481b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000128  00000000  00000000  00004d78  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 e3 01 	jmp	0x3c6	; 0x3c6 <__vector_1>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 f8 01 	jmp	0x3f0	; 0x3f0 <__vector_4>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 86 04 	jmp	0x90c	; 0x90c <__vector_21>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e0 e8       	ldi	r30, 0x80	; 128
      7c:	f5 e1       	ldi	r31, 0x15	; 21
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 34       	cpi	r26, 0x46	; 70
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	21 e0       	ldi	r18, 0x01	; 1
      8c:	a6 e4       	ldi	r26, 0x46	; 70
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ab 35       	cpi	r26, 0x5B	; 91
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 b9 00 	call	0x172	; 0x172 <main>
      9e:	0c 94 be 0a 	jmp	0x157c	; 0x157c <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setup>:
uint8_t switch_pot=0;
uint8_t mem_flag=0;

//CONFIGURACIONES
void setup(void){
	cli();
      a6:	f8 94       	cli
	DDRC=0b00000000;
      a8:	17 b8       	out	0x07, r1	; 7
	EICRA=0;
      aa:	e9 e6       	ldi	r30, 0x69	; 105
      ac:	f0 e0       	ldi	r31, 0x00	; 0
      ae:	10 82       	st	Z, r1
	EICRA|=(1<<ISC01);
      b0:	80 81       	ld	r24, Z
      b2:	82 60       	ori	r24, 0x02	; 2
      b4:	80 83       	st	Z, r24
	EIMSK=0,
      b6:	1d ba       	out	0x1d, r1	; 29
	EIMSK|=(1<<INT0);
      b8:	8d b3       	in	r24, 0x1d	; 29
      ba:	81 60       	ori	r24, 0x01	; 1
      bc:	8d bb       	out	0x1d, r24	; 29
	PCICR=0;
      be:	e8 e6       	ldi	r30, 0x68	; 104
      c0:	f0 e0       	ldi	r31, 0x00	; 0
      c2:	10 82       	st	Z, r1
	PCICR |=(1<<PCIE1);
      c4:	80 81       	ld	r24, Z
      c6:	82 60       	ori	r24, 0x02	; 2
      c8:	80 83       	st	Z, r24
	PCMSK1|=(1<<PCINT8)|(1<<PCINT9)|(1<<PCINT10)|(1<<PCINT11);
      ca:	ec e6       	ldi	r30, 0x6C	; 108
      cc:	f0 e0       	ldi	r31, 0x00	; 0
      ce:	80 81       	ld	r24, Z
      d0:	8f 60       	ori	r24, 0x0F	; 15
      d2:	80 83       	st	Z, r24
	sei();
      d4:	78 94       	sei
      d6:	08 95       	ret

000000d8 <init_adc>:
}

void init_adc(void){
	ADMUX = 0;
      d8:	ac e7       	ldi	r26, 0x7C	; 124
      da:	b0 e0       	ldi	r27, 0x00	; 0
      dc:	1c 92       	st	X, r1
	ADCSRA=0;
      de:	ea e7       	ldi	r30, 0x7A	; 122
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	10 82       	st	Z, r1
	
	// VCC=5V
	ADMUX |=(1<<REFS0);
      e4:	8c 91       	ld	r24, X
      e6:	80 64       	ori	r24, 0x40	; 64
      e8:	8c 93       	st	X, r24
	
	// Entrada 0 de MUX ADC0 para el prelab entonces no se cambian los bits de mux
	ADMUX |=(1<<ADLAR);
      ea:	8c 91       	ld	r24, X
      ec:	80 62       	ori	r24, 0x20	; 32
      ee:	8c 93       	st	X, r24
	
	//Encender ADC y  habilitar isr adc
	ADCSRA=0;
      f0:	10 82       	st	Z, r1
	ADCSRA|=(1<<ADEN)|(1<<ADIE);
      f2:	80 81       	ld	r24, Z
      f4:	88 68       	ori	r24, 0x88	; 136
      f6:	80 83       	st	Z, r24
	
	// preescaler = 16M/128=125k
	ADCSRA|=(1<<ADPS0)|(1<<ADPS1)|(1<<ADPS2);
      f8:	80 81       	ld	r24, Z
      fa:	87 60       	ori	r24, 0x07	; 7
      fc:	80 83       	st	Z, r24
	
	//no se utilizara el estado B
	ADCSRB=0;
      fe:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7f807b>
     102:	08 95       	ret

00000104 <initUART9600>:
	//DIDRO=0;
}

void initUART9600(void){
	//configurar pines tx y rx
	DDRD &=~(1<<DDD0);//entrada
     104:	8a b1       	in	r24, 0x0a	; 10
     106:	8e 7f       	andi	r24, 0xFE	; 254
     108:	8a b9       	out	0x0a, r24	; 10
	DDRD|=(1<<DDD1);//salida Tx
     10a:	8a b1       	in	r24, 0x0a	; 10
     10c:	82 60       	ori	r24, 0x02	; 2
     10e:	8a b9       	out	0x0a, r24	; 10
	
	//configurar registro A modo fast u2x0 en 1
	UCSR0A=0;
     110:	e0 ec       	ldi	r30, 0xC0	; 192
     112:	f0 e0       	ldi	r31, 0x00	; 0
     114:	10 82       	st	Z, r1
	UCSR0A|=(1<<U2X0);
     116:	80 81       	ld	r24, Z
     118:	82 60       	ori	r24, 0x02	; 2
     11a:	80 83       	st	Z, r24
	
	//configurar registro B, habilotar isr rx, bits para habilitar RX y TX
	UCSR0B=0;
     11c:	e1 ec       	ldi	r30, 0xC1	; 193
     11e:	f0 e0       	ldi	r31, 0x00	; 0
     120:	10 82       	st	Z, r1
	UCSR0B|=(1<<RXCIE0)|(1<<RXEN0)|(1<<TXEN0);
     122:	80 81       	ld	r24, Z
     124:	88 69       	ori	r24, 0x98	; 152
     126:	80 83       	st	Z, r24
	
	//Configurar registro C<Frame asincrono 8 bits de datos sin pariedad, 1 bit de stop
	UCSR0C=0;
     128:	e2 ec       	ldi	r30, 0xC2	; 194
     12a:	f0 e0       	ldi	r31, 0x00	; 0
     12c:	10 82       	st	Z, r1
	UCSR0C|=(1<<UCSZ01)|(1<<UCSZ00);
     12e:	80 81       	ld	r24, Z
     130:	86 60       	ori	r24, 0x06	; 6
     132:	80 83       	st	Z, r24
	
	//baudrate = 207 con % de error igual a 0.16% con 9600
	UBRR0=207;
     134:	8f ec       	ldi	r24, 0xCF	; 207
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7f80c5>
     13c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7f80c4>
     140:	08 95       	ret

00000142 <writetxtUART>:
	
}

void writetxtUART(char* texto){
     142:	ac 01       	movw	r20, r24
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
     144:	20 e0       	ldi	r18, 0x00	; 0
     146:	07 c0       	rjmp	.+14     	; 0x156 <writetxtUART+0x14>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
     148:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     14c:	95 ff       	sbrs	r25, 5
     14e:	fc cf       	rjmp	.-8      	; 0x148 <writetxtUART+0x6>
		UDR0=texto[i];//cuando i nulo se acaba
     150:	30 93 c6 00 	sts	0x00C6, r19	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
	
}

void writetxtUART(char* texto){
	uint8_t i;
	for (i=0;texto[i]!='\0';i++){
     154:	2f 5f       	subi	r18, 0xFF	; 255
     156:	fa 01       	movw	r30, r20
     158:	e2 0f       	add	r30, r18
     15a:	f1 1d       	adc	r31, r1
     15c:	30 81       	ld	r19, Z
     15e:	31 11       	cpse	r19, r1
     160:	f3 cf       	rjmp	.-26     	; 0x148 <writetxtUART+0x6>
		while(!(UCSR0A&(1<<UDRE0)));//esperar hasta que el udre0 esté en 1
		UDR0=texto[i];//cuando i nulo se acaba
	}
}
     162:	08 95       	ret

00000164 <uart_receive>:

uint8_t uart_receive(void){
	while(!(UCSR0A&(1<<RXC0)));
     164:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     168:	88 23       	and	r24, r24
     16a:	e4 f7       	brge	.-8      	; 0x164 <uart_receive>
	return UDR0;
     16c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7f80c6>
}
     170:	08 95       	ret

00000172 <main>:

//MAIN LOOP

int main(void){	
     172:	cf 93       	push	r28
     174:	df 93       	push	r29
     176:	cd b7       	in	r28, 0x3d	; 61
     178:	de b7       	in	r29, 0x3e	; 62
     17a:	60 97       	sbiw	r28, 0x10	; 16
     17c:	0f b6       	in	r0, 0x3f	; 63
     17e:	f8 94       	cli
     180:	de bf       	out	0x3e, r29	; 62
     182:	0f be       	out	0x3f, r0	; 63
     184:	cd bf       	out	0x3d, r28	; 61
	CLKPR=(1<<CLKPCE);
     186:	e1 e6       	ldi	r30, 0x61	; 97
     188:	f0 e0       	ldi	r31, 0x00	; 0
     18a:	80 e8       	ldi	r24, 0x80	; 128
     18c:	80 83       	st	Z, r24
	CLKPR=(1<<CLKPS0);
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 83       	st	Z, r24
	cli();
     192:	f8 94       	cli
	initUART9600();
     194:	0e 94 82 00 	call	0x104	; 0x104 <initUART9600>
	initPWM0(0,1024);
     198:	60 e0       	ldi	r22, 0x00	; 0
     19a:	74 e0       	ldi	r23, 0x04	; 4
     19c:	80 e0       	ldi	r24, 0x00	; 0
     19e:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <initPWM0>
	initPWM1(0,1024);
     1a2:	60 e0       	ldi	r22, 0x00	; 0
     1a4:	74 e0       	ldi	r23, 0x04	; 4
     1a6:	80 e0       	ldi	r24, 0x00	; 0
     1a8:	0e 94 44 05 	call	0xa88	; 0xa88 <initPWM1>
	//initPWM2(0,1024);
	init_adc();
     1ac:	0e 94 6c 00 	call	0xd8	; 0xd8 <init_adc>
	setup();
     1b0:	0e 94 53 00 	call	0xa6	; 0xa6 <setup>
	sei();
     1b4:	78 94       	sei
	EECR=0;
     1b6:	1f ba       	out	0x1f, r1	; 31
    /* Replace with your application code */
    while (1) 
    {	
		ADCSRA|=(1<<ADSC);
     1b8:	ea e7       	ldi	r30, 0x7A	; 122
     1ba:	f0 e0       	ldi	r31, 0x00	; 0
     1bc:	80 81       	ld	r24, Z
     1be:	80 64       	ori	r24, 0x40	; 64
     1c0:	80 83       	st	Z, r24
		//int servos[4]={valor_pot1,valor_pot2,valor_pot3,valor_pot4};
		if (modo==0){
     1c2:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <modo>
     1c6:	81 11       	cpse	r24, r1
     1c8:	68 c0       	rjmp	.+208    	; 0x29a <main+0x128>
			//aquí se pueden mover los pots libremente
			PORTD&=~(1<<PORTD3);
     1ca:	8b b1       	in	r24, 0x0b	; 11
     1cc:	87 7f       	andi	r24, 0xF7	; 247
     1ce:	8b b9       	out	0x0b, r24	; 11
			PORTD&=~(1<<PORTD4);
     1d0:	8b b1       	in	r24, 0x0b	; 11
     1d2:	8f 7e       	andi	r24, 0xEF	; 239
     1d4:	8b b9       	out	0x0b, r24	; 11
			updateDC1(valor_pot1,valor_pot2);
     1d6:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <valor_pot2>
     1da:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <valor_pot1>
     1de:	0e 94 a5 05 	call	0xb4a	; 0xb4a <updateDC1>
			updateDC0(valor_pot3,valor_pot4);
     1e2:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <valor_pot4>
     1e6:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <valor_pot3>
     1ea:	0e 94 13 05 	call	0xa26	; 0xa26 <updateDC0>
			char mensaje[16];
			snprintf(mensaje,sizeof(mensaje),"0 POT1:%d\n",valor_pot4);//potenciometro 1 en adafruit es el potenciometro 4 en codigo c
     1ee:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <valor_pot4>
     1f2:	1f 92       	push	r1
     1f4:	8f 93       	push	r24
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	91 e0       	ldi	r25, 0x01	; 1
     1fa:	9f 93       	push	r25
     1fc:	8f 93       	push	r24
     1fe:	1f 92       	push	r1
     200:	68 94       	set
     202:	ff 24       	eor	r15, r15
     204:	f4 f8       	bld	r15, 4
     206:	ff 92       	push	r15
     208:	8e 01       	movw	r16, r28
     20a:	0f 5f       	subi	r16, 0xFF	; 255
     20c:	1f 4f       	sbci	r17, 0xFF	; 255
     20e:	1f 93       	push	r17
     210:	0f 93       	push	r16
     212:	0e 94 b0 07 	call	0xf60	; 0xf60 <snprintf>
			writetxtUART(mensaje);
     216:	c8 01       	movw	r24, r16
     218:	0e 94 a1 00 	call	0x142	; 0x142 <writetxtUART>
			snprintf(mensaje,sizeof(mensaje),"0 POT2:%d\n",valor_pot3);//potenciometro 2 en adafruit es el potenciometro 3 en codigo c
     21c:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <valor_pot3>
     220:	1f 92       	push	r1
     222:	8f 93       	push	r24
     224:	8b e0       	ldi	r24, 0x0B	; 11
     226:	91 e0       	ldi	r25, 0x01	; 1
     228:	9f 93       	push	r25
     22a:	8f 93       	push	r24
     22c:	1f 92       	push	r1
     22e:	ff 92       	push	r15
     230:	1f 93       	push	r17
     232:	0f 93       	push	r16
     234:	0e 94 b0 07 	call	0xf60	; 0xf60 <snprintf>
			writetxtUART(mensaje);
     238:	c8 01       	movw	r24, r16
     23a:	0e 94 a1 00 	call	0x142	; 0x142 <writetxtUART>
			snprintf(mensaje,sizeof(mensaje),"0 POT3:%d\n",valor_pot2);//potenciometro 3 en adafruit es el potenciometro 2 en codigo c
     23e:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <valor_pot2>
     242:	1f 92       	push	r1
     244:	8f 93       	push	r24
     246:	86 e1       	ldi	r24, 0x16	; 22
     248:	91 e0       	ldi	r25, 0x01	; 1
     24a:	9f 93       	push	r25
     24c:	8f 93       	push	r24
     24e:	1f 92       	push	r1
     250:	ff 92       	push	r15
     252:	1f 93       	push	r17
     254:	0f 93       	push	r16
     256:	0e 94 b0 07 	call	0xf60	; 0xf60 <snprintf>
			writetxtUART(mensaje);
     25a:	c8 01       	movw	r24, r16
     25c:	0e 94 a1 00 	call	0x142	; 0x142 <writetxtUART>
			snprintf(mensaje,sizeof(mensaje),"0 POT4:%d\n",valor_pot1);//potenciometro 4 en adafruit es el potenciometro 1 en codigo c
     260:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <valor_pot1>
     264:	1f 92       	push	r1
     266:	8f 93       	push	r24
     268:	81 e2       	ldi	r24, 0x21	; 33
     26a:	91 e0       	ldi	r25, 0x01	; 1
     26c:	9f 93       	push	r25
     26e:	8f 93       	push	r24
     270:	1f 92       	push	r1
     272:	ff 92       	push	r15
     274:	1f 93       	push	r17
     276:	0f 93       	push	r16
     278:	0e 94 b0 07 	call	0xf60	; 0xf60 <snprintf>
			writetxtUART(mensaje);
     27c:	0f b6       	in	r0, 0x3f	; 63
     27e:	f8 94       	cli
     280:	de bf       	out	0x3e, r29	; 62
     282:	0f be       	out	0x3f, r0	; 63
     284:	cd bf       	out	0x3d, r28	; 61
     286:	c8 01       	movw	r24, r16
     288:	0e 94 a1 00 	call	0x142	; 0x142 <writetxtUART>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     28c:	8f e3       	ldi	r24, 0x3F	; 63
     28e:	9c e9       	ldi	r25, 0x9C	; 156
     290:	01 97       	sbiw	r24, 0x01	; 1
     292:	f1 f7       	brne	.-4      	; 0x290 <main+0x11e>
     294:	00 c0       	rjmp	.+0      	; 0x296 <main+0x124>
     296:	00 00       	nop
     298:	8f cf       	rjmp	.-226    	; 0x1b8 <main+0x46>
			_delay_ms(10);
		}else if (modo==1){
     29a:	81 30       	cpi	r24, 0x01	; 1
     29c:	39 f4       	brne	.+14     	; 0x2ac <main+0x13a>
			//se guardan los valores de los pots a la eeprom (escribir)
			PORTD|=(1<<PORTD4);
     29e:	8b b1       	in	r24, 0x0b	; 11
     2a0:	80 61       	ori	r24, 0x10	; 16
     2a2:	8b b9       	out	0x0b, r24	; 11
			PORTD&=~(1<<PORTD3);
     2a4:	8b b1       	in	r24, 0x0b	; 11
     2a6:	87 7f       	andi	r24, 0xF7	; 247
     2a8:	8b b9       	out	0x0b, r24	; 11
     2aa:	86 cf       	rjmp	.-244    	; 0x1b8 <main+0x46>
		}else if(modo==2){
     2ac:	82 30       	cpi	r24, 0x02	; 2
     2ae:	69 f4       	brne	.+26     	; 0x2ca <main+0x158>
			//modo leer eeprom
			PORTD|=(1<<PORTD3);
     2b0:	8b b1       	in	r24, 0x0b	; 11
     2b2:	88 60       	ori	r24, 0x08	; 8
     2b4:	8b b9       	out	0x0b, r24	; 11
			PORTD&=~(1<<PORTD4);
     2b6:	8b b1       	in	r24, 0x0b	; 11
     2b8:	8f 7e       	andi	r24, 0xEF	; 239
     2ba:	8b b9       	out	0x0b, r24	; 11
     2bc:	8f e3       	ldi	r24, 0x3F	; 63
     2be:	9c e9       	ldi	r25, 0x9C	; 156
     2c0:	01 97       	sbiw	r24, 0x01	; 1
     2c2:	f1 f7       	brne	.-4      	; 0x2c0 <main+0x14e>
     2c4:	00 c0       	rjmp	.+0      	; 0x2c6 <main+0x154>
     2c6:	00 00       	nop
     2c8:	77 cf       	rjmp	.-274    	; 0x1b8 <main+0x46>
			_delay_ms(10);
		}else if (modo==3){
     2ca:	83 30       	cpi	r24, 0x03	; 3
     2cc:	09 f0       	breq	.+2      	; 0x2d0 <main+0x15e>
     2ce:	74 cf       	rjmp	.-280    	; 0x1b8 <main+0x46>
			//modo=2, aquí se conecta con adafruit
			PORTD|=(1<<PORTD3)|(1<<PORTD4);
     2d0:	8b b1       	in	r24, 0x0b	; 11
     2d2:	88 61       	ori	r24, 0x18	; 24
     2d4:	8b b9       	out	0x0b, r24	; 11
			writetxtUART("3");
     2d6:	8c e2       	ldi	r24, 0x2C	; 44
     2d8:	91 e0       	ldi	r25, 0x01	; 1
     2da:	0e 94 a1 00 	call	0x142	; 0x142 <writetxtUART>
			if (UCSR0A&(1<<RXC0)){
     2de:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7f80c0>
     2e2:	88 23       	and	r24, r24
     2e4:	0c f0       	brlt	.+2      	; 0x2e8 <main+0x176>
     2e6:	62 c0       	rjmp	.+196    	; 0x3ac <main+0x23a>
     2e8:	06 c0       	rjmp	.+12     	; 0x2f6 <main+0x184>
				char mensaje_recibido[16];
				int i=0;
				while((mensaje_recibido[i++]=uart_receive())!='\n'){
     2ea:	87 01       	movw	r16, r14
					if (i>=15) break;
     2ec:	9f e0       	ldi	r25, 0x0F	; 15
     2ee:	e9 16       	cp	r14, r25
     2f0:	f1 04       	cpc	r15, r1
     2f2:	1c f0       	brlt	.+6      	; 0x2fa <main+0x188>
     2f4:	11 c0       	rjmp	.+34     	; 0x318 <main+0x1a6>
     2f6:	00 e0       	ldi	r16, 0x00	; 0
     2f8:	10 e0       	ldi	r17, 0x00	; 0
			PORTD|=(1<<PORTD3)|(1<<PORTD4);
			writetxtUART("3");
			if (UCSR0A&(1<<RXC0)){
				char mensaje_recibido[16];
				int i=0;
				while((mensaje_recibido[i++]=uart_receive())!='\n'){
     2fa:	78 01       	movw	r14, r16
     2fc:	8f ef       	ldi	r24, 0xFF	; 255
     2fe:	e8 1a       	sub	r14, r24
     300:	f8 0a       	sbc	r15, r24
     302:	0e 94 b2 00 	call	0x164	; 0x164 <uart_receive>
     306:	e1 e0       	ldi	r30, 0x01	; 1
     308:	f0 e0       	ldi	r31, 0x00	; 0
     30a:	ec 0f       	add	r30, r28
     30c:	fd 1f       	adc	r31, r29
     30e:	e0 0f       	add	r30, r16
     310:	f1 1f       	adc	r31, r17
     312:	80 83       	st	Z, r24
     314:	8a 30       	cpi	r24, 0x0A	; 10
     316:	49 f7       	brne	.-46     	; 0x2ea <main+0x178>
					if (i>=15) break;
				}
				mensaje_recibido[i]='\0';
     318:	e1 e0       	ldi	r30, 0x01	; 1
     31a:	f0 e0       	ldi	r31, 0x00	; 0
     31c:	ec 0f       	add	r30, r28
     31e:	fd 1f       	adc	r31, r29
     320:	ee 0d       	add	r30, r14
     322:	ff 1d       	adc	r31, r15
     324:	10 82       	st	Z, r1
				if(strncmp(mensaje_recibido,"POT1:",5)){
     326:	45 e0       	ldi	r20, 0x05	; 5
     328:	50 e0       	ldi	r21, 0x00	; 0
     32a:	6e e2       	ldi	r22, 0x2E	; 46
     32c:	71 e0       	ldi	r23, 0x01	; 1
     32e:	ce 01       	movw	r24, r28
     330:	01 96       	adiw	r24, 0x01	; 1
     332:	0e 94 9a 07 	call	0xf34	; 0xf34 <strncmp>
     336:	89 2b       	or	r24, r25
     338:	39 f0       	breq	.+14     	; 0x348 <main+0x1d6>
					pot1_adafruit=atoi(mensaje_recibido+5);
     33a:	ce 01       	movw	r24, r28
     33c:	06 96       	adiw	r24, 0x06	; 6
     33e:	0e 94 7c 07 	call	0xef8	; 0xef8 <atoi>
     342:	80 93 4b 01 	sts	0x014B, r24	; 0x80014b <pot1_adafruit>
     346:	32 c0       	rjmp	.+100    	; 0x3ac <main+0x23a>
				}else if(strncmp(mensaje_recibido,"POT2:",5)){
     348:	45 e0       	ldi	r20, 0x05	; 5
     34a:	50 e0       	ldi	r21, 0x00	; 0
     34c:	64 e3       	ldi	r22, 0x34	; 52
     34e:	71 e0       	ldi	r23, 0x01	; 1
     350:	ce 01       	movw	r24, r28
     352:	01 96       	adiw	r24, 0x01	; 1
     354:	0e 94 9a 07 	call	0xf34	; 0xf34 <strncmp>
     358:	89 2b       	or	r24, r25
     35a:	39 f0       	breq	.+14     	; 0x36a <main+0x1f8>
					pot2_adafruit=atoi(mensaje_recibido+5);
     35c:	ce 01       	movw	r24, r28
     35e:	06 96       	adiw	r24, 0x06	; 6
     360:	0e 94 7c 07 	call	0xef8	; 0xef8 <atoi>
     364:	80 93 4a 01 	sts	0x014A, r24	; 0x80014a <pot2_adafruit>
     368:	21 c0       	rjmp	.+66     	; 0x3ac <main+0x23a>
				}else if(strncmp(mensaje_recibido,"POT3:",5)){
     36a:	45 e0       	ldi	r20, 0x05	; 5
     36c:	50 e0       	ldi	r21, 0x00	; 0
     36e:	6a e3       	ldi	r22, 0x3A	; 58
     370:	71 e0       	ldi	r23, 0x01	; 1
     372:	ce 01       	movw	r24, r28
     374:	01 96       	adiw	r24, 0x01	; 1
     376:	0e 94 9a 07 	call	0xf34	; 0xf34 <strncmp>
     37a:	89 2b       	or	r24, r25
     37c:	39 f0       	breq	.+14     	; 0x38c <main+0x21a>
					pot3_adafruit=atoi(mensaje_recibido+5);
     37e:	ce 01       	movw	r24, r28
     380:	06 96       	adiw	r24, 0x06	; 6
     382:	0e 94 7c 07 	call	0xef8	; 0xef8 <atoi>
     386:	80 93 49 01 	sts	0x0149, r24	; 0x800149 <pot3_adafruit>
     38a:	10 c0       	rjmp	.+32     	; 0x3ac <main+0x23a>
				}else if(strncmp(mensaje_recibido,"POT4:",5)){
     38c:	45 e0       	ldi	r20, 0x05	; 5
     38e:	50 e0       	ldi	r21, 0x00	; 0
     390:	60 e4       	ldi	r22, 0x40	; 64
     392:	71 e0       	ldi	r23, 0x01	; 1
     394:	ce 01       	movw	r24, r28
     396:	01 96       	adiw	r24, 0x01	; 1
     398:	0e 94 9a 07 	call	0xf34	; 0xf34 <strncmp>
     39c:	89 2b       	or	r24, r25
     39e:	31 f0       	breq	.+12     	; 0x3ac <main+0x23a>
					pot4_adafruit=atoi(mensaje_recibido+5);
     3a0:	ce 01       	movw	r24, r28
     3a2:	06 96       	adiw	r24, 0x06	; 6
     3a4:	0e 94 7c 07 	call	0xef8	; 0xef8 <atoi>
     3a8:	80 93 48 01 	sts	0x0148, r24	; 0x800148 <pot4_adafruit>
				}	
			}
			updateDC1(pot1_adafruit,pot2_adafruit);
     3ac:	60 91 4a 01 	lds	r22, 0x014A	; 0x80014a <pot2_adafruit>
     3b0:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <pot1_adafruit>
     3b4:	0e 94 a5 05 	call	0xb4a	; 0xb4a <updateDC1>
			updateDC0(pot3_adafruit,pot4_adafruit);
     3b8:	60 91 48 01 	lds	r22, 0x0148	; 0x800148 <pot4_adafruit>
     3bc:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <pot3_adafruit>
     3c0:	0e 94 13 05 	call	0xa26	; 0xa26 <updateDC0>
     3c4:	f9 ce       	rjmp	.-526    	; 0x1b8 <main+0x46>

000003c6 <__vector_1>:
    }
}


//INTERRUPCIONES
ISR(INT0_vect){
     3c6:	1f 92       	push	r1
     3c8:	0f 92       	push	r0
     3ca:	0f b6       	in	r0, 0x3f	; 63
     3cc:	0f 92       	push	r0
     3ce:	11 24       	eor	r1, r1
     3d0:	8f 93       	push	r24
	modo++;
     3d2:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <modo>
     3d6:	8f 5f       	subi	r24, 0xFF	; 255
     3d8:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <modo>
	if (modo>=4){
     3dc:	84 30       	cpi	r24, 0x04	; 4
     3de:	10 f0       	brcs	.+4      	; 0x3e4 <__vector_1+0x1e>
		modo=0;
     3e0:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <modo>
	}
}
     3e4:	8f 91       	pop	r24
     3e6:	0f 90       	pop	r0
     3e8:	0f be       	out	0x3f, r0	; 63
     3ea:	0f 90       	pop	r0
     3ec:	1f 90       	pop	r1
     3ee:	18 95       	reti

000003f0 <__vector_4>:

ISR(PCINT1_vect){
     3f0:	1f 92       	push	r1
     3f2:	0f 92       	push	r0
     3f4:	0f b6       	in	r0, 0x3f	; 63
     3f6:	0f 92       	push	r0
     3f8:	11 24       	eor	r1, r1
     3fa:	2f 93       	push	r18
     3fc:	3f 93       	push	r19
     3fe:	4f 93       	push	r20
     400:	5f 93       	push	r21
     402:	6f 93       	push	r22
     404:	7f 93       	push	r23
     406:	8f 93       	push	r24
     408:	9f 93       	push	r25
     40a:	af 93       	push	r26
     40c:	bf 93       	push	r27
     40e:	cf 93       	push	r28
     410:	df 93       	push	r29
     412:	ef 93       	push	r30
     414:	ff 93       	push	r31
	//revisa si es la primera o segunda interrupción
	valor_pc=PINC;
     416:	86 b1       	in	r24, 0x06	; 6
	valor_pc=(valor_pc&0b00001111);
     418:	8f 70       	andi	r24, 0x0F	; 15
     41a:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <valor_pc>
	if (pulsador==0){
     41e:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <pulsador>
     422:	91 11       	cpse	r25, r1
     424:	5e c2       	rjmp	.+1212   	; 0x8e2 <__DATA_REGION_LENGTH__+0xe2>
		if ((modo==1)|(modo==2)){
     426:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <modo>
     42a:	91 50       	subi	r25, 0x01	; 1
     42c:	92 30       	cpi	r25, 0x02	; 2
     42e:	b8 f5       	brcc	.+110    	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			if (valor_pc==0b00001110){
     430:	8e 30       	cpi	r24, 0x0E	; 14
     432:	61 f4       	brne	.+24     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
				PORTD|=(1<<PORTD7);
     434:	8b b1       	in	r24, 0x0b	; 11
     436:	80 68       	ori	r24, 0x80	; 128
     438:	8b b9       	out	0x0b, r24	; 11
				posicion=1;
     43a:	81 e0       	ldi	r24, 0x01	; 1
     43c:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <posicion>
				pulsador++;
     440:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <pulsador>
     444:	8f 5f       	subi	r24, 0xFF	; 255
     446:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <pulsador>
     44a:	29 c0       	rjmp	.+82     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			}else if(valor_pc==0b00001101){
     44c:	8d 30       	cpi	r24, 0x0D	; 13
     44e:	61 f4       	brne	.+24     	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
				PORTD&=~(1<<PORTD7);
     450:	8b b1       	in	r24, 0x0b	; 11
     452:	8f 77       	andi	r24, 0x7F	; 127
     454:	8b b9       	out	0x0b, r24	; 11
				posicion=2;
     456:	82 e0       	ldi	r24, 0x02	; 2
     458:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <posicion>
				pulsador++;
     45c:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <pulsador>
     460:	8f 5f       	subi	r24, 0xFF	; 255
     462:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <pulsador>
     466:	1b c0       	rjmp	.+54     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			}else if(valor_pc==0b00001011){
     468:	8b 30       	cpi	r24, 0x0B	; 11
     46a:	61 f4       	brne	.+24     	; 0x484 <__EEPROM_REGION_LENGTH__+0x84>
				PORTB|=(1<<PORTB0);
     46c:	85 b1       	in	r24, 0x05	; 5
     46e:	81 60       	ori	r24, 0x01	; 1
     470:	85 b9       	out	0x05, r24	; 5
				posicion=3;
     472:	83 e0       	ldi	r24, 0x03	; 3
     474:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <posicion>
				pulsador++;
     478:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <pulsador>
     47c:	8f 5f       	subi	r24, 0xFF	; 255
     47e:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <pulsador>
     482:	0d c0       	rjmp	.+26     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
			}else if(valor_pc==0b00000111){
     484:	87 30       	cpi	r24, 0x07	; 7
     486:	59 f4       	brne	.+22     	; 0x49e <__EEPROM_REGION_LENGTH__+0x9e>
				PORTB&=~(1<<PORTB0);
     488:	85 b1       	in	r24, 0x05	; 5
     48a:	8e 7f       	andi	r24, 0xFE	; 254
     48c:	85 b9       	out	0x05, r24	; 5
				posicion=4;
     48e:	84 e0       	ldi	r24, 0x04	; 4
     490:	80 93 47 01 	sts	0x0147, r24	; 0x800147 <posicion>
				pulsador++;
     494:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <pulsador>
     498:	8f 5f       	subi	r24, 0xFF	; 255
     49a:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <pulsador>
			}
		}
		if (modo==1){
     49e:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <modo>
     4a2:	81 30       	cpi	r24, 0x01	; 1
     4a4:	09 f0       	breq	.+2      	; 0x4a8 <__EEPROM_REGION_LENGTH__+0xa8>
     4a6:	16 c1       	rjmp	.+556    	; 0x6d4 <__EEPROM_REGION_LENGTH__+0x2d4>
			cli();
     4a8:	f8 94       	cli
			switch(posicion){
     4aa:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <posicion>
     4ae:	82 30       	cpi	r24, 0x02	; 2
     4b0:	09 f4       	brne	.+2      	; 0x4b4 <__EEPROM_REGION_LENGTH__+0xb4>
     4b2:	4d c0       	rjmp	.+154    	; 0x54e <__EEPROM_REGION_LENGTH__+0x14e>
     4b4:	18 f4       	brcc	.+6      	; 0x4bc <__EEPROM_REGION_LENGTH__+0xbc>
     4b6:	81 30       	cpi	r24, 0x01	; 1
     4b8:	41 f0       	breq	.+16     	; 0x4ca <__EEPROM_REGION_LENGTH__+0xca>
     4ba:	15 c2       	rjmp	.+1066   	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
     4bc:	83 30       	cpi	r24, 0x03	; 3
     4be:	09 f4       	brne	.+2      	; 0x4c2 <__EEPROM_REGION_LENGTH__+0xc2>
     4c0:	8b c0       	rjmp	.+278    	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
     4c2:	84 30       	cpi	r24, 0x04	; 4
     4c4:	09 f4       	brne	.+2      	; 0x4c8 <__EEPROM_REGION_LENGTH__+0xc8>
     4c6:	cd c0       	rjmp	.+410    	; 0x662 <__EEPROM_REGION_LENGTH__+0x262>
     4c8:	0e c2       	rjmp	.+1052   	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
				case 1:
					adr=0;
     4ca:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     4ce:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot1);
     4d2:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <valor_pot1>
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	90 e0       	ldi	r25, 0x00	; 0
     4da:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     4de:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     4e2:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     4e6:	01 96       	adiw	r24, 0x01	; 1
     4e8:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     4ec:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot2);
     4f0:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <valor_pot2>
     4f4:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     4f8:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     4fc:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     500:	01 96       	adiw	r24, 0x01	; 1
     502:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     506:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot3);
     50a:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <valor_pot3>
     50e:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     512:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     516:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     51a:	01 96       	adiw	r24, 0x01	; 1
     51c:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     520:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
     524:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <valor_pot4>
     528:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr=0;
     52c:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     530:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Se guardo la posicion 1\n");
					break;
     534:	d8 c1       	rjmp	.+944    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
				case 2:
					for (int i=0;i<5;i++){
						adr++;
     536:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     53a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     53e:	01 96       	adiw	r24, 0x01	; 1
     540:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     544:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 1\n");
					break;
				case 2:
					for (int i=0;i<5;i++){
     548:	2f 5f       	subi	r18, 0xFF	; 255
     54a:	3f 4f       	sbci	r19, 0xFF	; 255
     54c:	02 c0       	rjmp	.+4      	; 0x552 <__EEPROM_REGION_LENGTH__+0x152>
				pulsador++;
			}
		}
		if (modo==1){
			cli();
			switch(posicion){
     54e:	20 e0       	ldi	r18, 0x00	; 0
     550:	30 e0       	ldi	r19, 0x00	; 0
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 1\n");
					break;
				case 2:
					for (int i=0;i<5;i++){
     552:	25 30       	cpi	r18, 0x05	; 5
     554:	31 05       	cpc	r19, r1
     556:	7c f3       	brlt	.-34     	; 0x536 <__EEPROM_REGION_LENGTH__+0x136>
						adr++;
					}
					eeprom_write_byte(adr,valor_pot1);
     558:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <valor_pot1>
     55c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     560:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     564:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     568:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     56c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     576:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot2);
     57a:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <valor_pot2>
     57e:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     582:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     586:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     590:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot3);
     594:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <valor_pot3>
     598:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     59c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     5a0:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     5a4:	01 96       	adiw	r24, 0x01	; 1
     5a6:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     5aa:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
     5ae:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <valor_pot4>
     5b2:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr=0;
     5b6:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     5ba:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Se guardo la posicion 2\n");
					break;
     5be:	93 c1       	rjmp	.+806    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
				case 3:
					for (int i=0;i<9;i++){
						adr++;
     5c0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     5c4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     5c8:	01 96       	adiw	r24, 0x01	; 1
     5ca:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     5ce:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 2\n");
					break;
				case 3:
					for (int i=0;i<9;i++){
     5d2:	2f 5f       	subi	r18, 0xFF	; 255
     5d4:	3f 4f       	sbci	r19, 0xFF	; 255
     5d6:	02 c0       	rjmp	.+4      	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
				pulsador++;
			}
		}
		if (modo==1){
			cli();
			switch(posicion){
     5d8:	20 e0       	ldi	r18, 0x00	; 0
     5da:	30 e0       	ldi	r19, 0x00	; 0
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 2\n");
					break;
				case 3:
					for (int i=0;i<9;i++){
     5dc:	29 30       	cpi	r18, 0x09	; 9
     5de:	31 05       	cpc	r19, r1
     5e0:	7c f3       	brlt	.-34     	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
						adr++;
					}
					eeprom_write_byte(adr,valor_pot1);
     5e2:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <valor_pot1>
     5e6:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     5ea:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     5ee:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     5f2:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     5f6:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     5fa:	01 96       	adiw	r24, 0x01	; 1
     5fc:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     600:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot2);
     604:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <valor_pot2>
     608:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     60c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     610:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     61a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot3);
     61e:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <valor_pot3>
     622:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     626:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     62a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     62e:	01 96       	adiw	r24, 0x01	; 1
     630:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     634:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
     638:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <valor_pot4>
     63c:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr=0;
     640:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     644:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Se guardo la posicion 3\n");
					break;
     648:	4e c1       	rjmp	.+668    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
				case 4:
					for (int i=0;i<13;i++){
						adr++;
     64a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     64e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     652:	01 96       	adiw	r24, 0x01	; 1
     654:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     658:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 3\n");
					break;
				case 4:
					for (int i=0;i<13;i++){
     65c:	2f 5f       	subi	r18, 0xFF	; 255
     65e:	3f 4f       	sbci	r19, 0xFF	; 255
     660:	02 c0       	rjmp	.+4      	; 0x666 <__EEPROM_REGION_LENGTH__+0x266>
				pulsador++;
			}
		}
		if (modo==1){
			cli();
			switch(posicion){
     662:	20 e0       	ldi	r18, 0x00	; 0
     664:	30 e0       	ldi	r19, 0x00	; 0
					eeprom_write_byte(adr,valor_pot4);
					adr=0;
					//writetxtUART("Se guardo la posicion 3\n");
					break;
				case 4:
					for (int i=0;i<13;i++){
     666:	2d 30       	cpi	r18, 0x0D	; 13
     668:	31 05       	cpc	r19, r1
     66a:	7c f3       	brlt	.-34     	; 0x64a <__EEPROM_REGION_LENGTH__+0x24a>
						adr++;
					}
					eeprom_write_byte(adr,valor_pot1);
     66c:	60 91 55 01 	lds	r22, 0x0155	; 0x800155 <valor_pot1>
     670:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     674:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     678:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     67c:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     680:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     684:	01 96       	adiw	r24, 0x01	; 1
     686:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     68a:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot2);
     68e:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <valor_pot2>
     692:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     696:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     69a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     69e:	01 96       	adiw	r24, 0x01	; 1
     6a0:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     6a4:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot3);
     6a8:	60 91 53 01 	lds	r22, 0x0153	; 0x800153 <valor_pot3>
     6ac:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr++;
     6b0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     6b4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     6b8:	01 96       	adiw	r24, 0x01	; 1
     6ba:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     6be:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					eeprom_write_byte(adr,valor_pot4);
     6c2:	60 91 52 01 	lds	r22, 0x0152	; 0x800152 <valor_pot4>
     6c6:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <eeprom_write_byte>
					adr=0;
     6ca:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     6ce:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Se guardo la posicion 4\n");
					break;
     6d2:	09 c1       	rjmp	.+530    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
				sei();
			posicion=0;
			}
		}else if(modo==2){
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	09 f0       	breq	.+2      	; 0x6da <__EEPROM_REGION_LENGTH__+0x2da>
     6d8:	06 c1       	rjmp	.+524    	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
			cli();
     6da:	f8 94       	cli
			switch(posicion){
     6dc:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <posicion>
     6e0:	82 30       	cpi	r24, 0x02	; 2
     6e2:	09 f4       	brne	.+2      	; 0x6e6 <__EEPROM_REGION_LENGTH__+0x2e6>
     6e4:	44 c0       	rjmp	.+136    	; 0x76e <__EEPROM_REGION_LENGTH__+0x36e>
     6e6:	18 f4       	brcc	.+6      	; 0x6ee <__EEPROM_REGION_LENGTH__+0x2ee>
     6e8:	81 30       	cpi	r24, 0x01	; 1
     6ea:	41 f0       	breq	.+16     	; 0x6fc <__EEPROM_REGION_LENGTH__+0x2fc>
     6ec:	ea c0       	rjmp	.+468    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
     6ee:	83 30       	cpi	r24, 0x03	; 3
     6f0:	09 f4       	brne	.+2      	; 0x6f4 <__EEPROM_REGION_LENGTH__+0x2f4>
     6f2:	7a c0       	rjmp	.+244    	; 0x7e8 <__EEPROM_REGION_LENGTH__+0x3e8>
     6f4:	84 30       	cpi	r24, 0x04	; 4
     6f6:	09 f4       	brne	.+2      	; 0x6fa <__EEPROM_REGION_LENGTH__+0x2fa>
     6f8:	b4 c0       	rjmp	.+360    	; 0x862 <__DATA_REGION_LENGTH__+0x62>
     6fa:	e3 c0       	rjmp	.+454    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
				case 1:
					adr=0;
     6fc:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     700:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					valor_pot1_esc=eeprom_read_byte(adr);
     704:	80 e0       	ldi	r24, 0x00	; 0
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     70c:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <valor_pot1_esc>
					adr++;
     710:	81 e0       	ldi	r24, 0x01	; 1
     712:	90 e0       	ldi	r25, 0x00	; 0
     714:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     718:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot2_esc=eeprom_read_byte(adr);
     71c:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     720:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <valor_pot2_esc>
					adr++;
     724:	82 e0       	ldi	r24, 0x02	; 2
     726:	90 e0       	ldi	r25, 0x00	; 0
     728:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     72c:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot3_esc=eeprom_read_byte(adr);
     730:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     734:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <valor_pot3_esc>
					adr++;
     738:	83 e0       	ldi	r24, 0x03	; 3
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     740:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
     744:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     748:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <valor_pot4_esc>
					adr=0;
     74c:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     750:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Mostrando la posicion 1\n");
					break;
     754:	b6 c0       	rjmp	.+364    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
				case 2:
					for (int i=0;i<5;i++){
						adr++;
     756:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     75a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     75e:	01 96       	adiw	r24, 0x01	; 1
     760:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     764:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 1\n");
					break;
				case 2:
					for (int i=0;i<5;i++){
     768:	2f 5f       	subi	r18, 0xFF	; 255
     76a:	3f 4f       	sbci	r19, 0xFF	; 255
     76c:	02 c0       	rjmp	.+4      	; 0x772 <__EEPROM_REGION_LENGTH__+0x372>
				sei();
			posicion=0;
			}
		}else if(modo==2){
			cli();
			switch(posicion){
     76e:	20 e0       	ldi	r18, 0x00	; 0
     770:	30 e0       	ldi	r19, 0x00	; 0
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 1\n");
					break;
				case 2:
					for (int i=0;i<5;i++){
     772:	25 30       	cpi	r18, 0x05	; 5
     774:	31 05       	cpc	r19, r1
     776:	7c f3       	brlt	.-34     	; 0x756 <__EEPROM_REGION_LENGTH__+0x356>
						adr++;
					}
					valor_pot1_esc=eeprom_read_byte(adr);
     778:	c0 91 50 01 	lds	r28, 0x0150	; 0x800150 <adr>
     77c:	d0 91 51 01 	lds	r29, 0x0151	; 0x800151 <adr+0x1>
     780:	ce 01       	movw	r24, r28
     782:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     786:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <valor_pot1_esc>
					adr++;
     78a:	21 96       	adiw	r28, 0x01	; 1
     78c:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     790:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot2_esc=eeprom_read_byte(adr);
     794:	ce 01       	movw	r24, r28
     796:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     79a:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <valor_pot2_esc>
					adr++;
     79e:	21 96       	adiw	r28, 0x01	; 1
     7a0:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     7a4:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot3_esc=eeprom_read_byte(adr);
     7a8:	ce 01       	movw	r24, r28
     7aa:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     7ae:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <valor_pot3_esc>
					adr++;
     7b2:	ce 01       	movw	r24, r28
     7b4:	01 96       	adiw	r24, 0x01	; 1
     7b6:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     7ba:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
     7be:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     7c2:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <valor_pot4_esc>
					adr=0;
     7c6:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     7ca:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Mostrando la posicion 2\n");
					break;
     7ce:	79 c0       	rjmp	.+242    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
				case 3:
					for (int i=0;i<9;i++){
						adr++;
     7d0:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     7d4:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     7d8:	01 96       	adiw	r24, 0x01	; 1
     7da:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     7de:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 2\n");
					break;
				case 3:
					for (int i=0;i<9;i++){
     7e2:	2f 5f       	subi	r18, 0xFF	; 255
     7e4:	3f 4f       	sbci	r19, 0xFF	; 255
     7e6:	02 c0       	rjmp	.+4      	; 0x7ec <__EEPROM_REGION_LENGTH__+0x3ec>
				sei();
			posicion=0;
			}
		}else if(modo==2){
			cli();
			switch(posicion){
     7e8:	20 e0       	ldi	r18, 0x00	; 0
     7ea:	30 e0       	ldi	r19, 0x00	; 0
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 2\n");
					break;
				case 3:
					for (int i=0;i<9;i++){
     7ec:	29 30       	cpi	r18, 0x09	; 9
     7ee:	31 05       	cpc	r19, r1
     7f0:	7c f3       	brlt	.-34     	; 0x7d0 <__EEPROM_REGION_LENGTH__+0x3d0>
						adr++;
					}
					valor_pot1_esc=eeprom_read_byte(adr);
     7f2:	c0 91 50 01 	lds	r28, 0x0150	; 0x800150 <adr>
     7f6:	d0 91 51 01 	lds	r29, 0x0151	; 0x800151 <adr+0x1>
     7fa:	ce 01       	movw	r24, r28
     7fc:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     800:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <valor_pot1_esc>
					adr++;
     804:	21 96       	adiw	r28, 0x01	; 1
     806:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     80a:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot2_esc=eeprom_read_byte(adr);
     80e:	ce 01       	movw	r24, r28
     810:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     814:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <valor_pot2_esc>
					adr++;
     818:	21 96       	adiw	r28, 0x01	; 1
     81a:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     81e:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot3_esc=eeprom_read_byte(adr);
     822:	ce 01       	movw	r24, r28
     824:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     828:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <valor_pot3_esc>
					adr++;
     82c:	ce 01       	movw	r24, r28
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     834:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
     838:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     83c:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <valor_pot4_esc>
					adr=0;
     840:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     844:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Mostrando la posicion 3\n");
					break;
     848:	3c c0       	rjmp	.+120    	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
				case 4:
					for (int i=0;i<13;i++){
						adr++;
     84a:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <adr>
     84e:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <adr+0x1>
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     858:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 3\n");
					break;
				case 4:
					for (int i=0;i<13;i++){
     85c:	2f 5f       	subi	r18, 0xFF	; 255
     85e:	3f 4f       	sbci	r19, 0xFF	; 255
     860:	02 c0       	rjmp	.+4      	; 0x866 <__DATA_REGION_LENGTH__+0x66>
				sei();
			posicion=0;
			}
		}else if(modo==2){
			cli();
			switch(posicion){
     862:	20 e0       	ldi	r18, 0x00	; 0
     864:	30 e0       	ldi	r19, 0x00	; 0
					valor_pot4_esc=eeprom_read_byte(adr);
					adr=0;
					//writetxtUART("Mostrando la posicion 3\n");
					break;
				case 4:
					for (int i=0;i<13;i++){
     866:	2d 30       	cpi	r18, 0x0D	; 13
     868:	31 05       	cpc	r19, r1
     86a:	7c f3       	brlt	.-34     	; 0x84a <__DATA_REGION_LENGTH__+0x4a>
						adr++;
					}
					valor_pot1_esc=eeprom_read_byte(adr);
     86c:	c0 91 50 01 	lds	r28, 0x0150	; 0x800150 <adr>
     870:	d0 91 51 01 	lds	r29, 0x0151	; 0x800151 <adr+0x1>
     874:	ce 01       	movw	r24, r28
     876:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     87a:	80 93 4f 01 	sts	0x014F, r24	; 0x80014f <valor_pot1_esc>
					adr++;
     87e:	21 96       	adiw	r28, 0x01	; 1
     880:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     884:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot2_esc=eeprom_read_byte(adr);
     888:	ce 01       	movw	r24, r28
     88a:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     88e:	80 93 4e 01 	sts	0x014E, r24	; 0x80014e <valor_pot2_esc>
					adr++;
     892:	21 96       	adiw	r28, 0x01	; 1
     894:	d0 93 51 01 	sts	0x0151, r29	; 0x800151 <adr+0x1>
     898:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <adr>
					valor_pot3_esc=eeprom_read_byte(adr);
     89c:	ce 01       	movw	r24, r28
     89e:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     8a2:	80 93 4d 01 	sts	0x014D, r24	; 0x80014d <valor_pot3_esc>
					adr++;
     8a6:	ce 01       	movw	r24, r28
     8a8:	01 96       	adiw	r24, 0x01	; 1
     8aa:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <adr+0x1>
     8ae:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <adr>
					valor_pot4_esc=eeprom_read_byte(adr);
     8b2:	0e 94 71 0a 	call	0x14e2	; 0x14e2 <eeprom_read_byte>
     8b6:	80 93 4c 01 	sts	0x014C, r24	; 0x80014c <valor_pot4_esc>
					adr=0;
     8ba:	10 92 51 01 	sts	0x0151, r1	; 0x800151 <adr+0x1>
     8be:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <adr>
					//writetxtUART("Mostrando la posicion 4\n");
					break;
			}
			sei();
     8c2:	78 94       	sei
			updateDC1(valor_pot1_esc,valor_pot2_esc);
     8c4:	60 91 4e 01 	lds	r22, 0x014E	; 0x80014e <valor_pot2_esc>
     8c8:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <valor_pot1_esc>
     8cc:	0e 94 a5 05 	call	0xb4a	; 0xb4a <updateDC1>
			updateDC0(valor_pot3_esc,valor_pot4_esc);
     8d0:	60 91 4c 01 	lds	r22, 0x014C	; 0x80014c <valor_pot4_esc>
     8d4:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <valor_pot3_esc>
     8d8:	0e 94 13 05 	call	0xa26	; 0xa26 <updateDC0>
			posicion=0;
     8dc:	10 92 47 01 	sts	0x0147, r1	; 0x800147 <posicion>
     8e0:	02 c0       	rjmp	.+4      	; 0x8e6 <__DATA_REGION_LENGTH__+0xe6>
		}
		//terminan if de modos	
	}else{
	pulsador=0;}
     8e2:	10 92 56 01 	sts	0x0156, r1	; 0x800156 <pulsador>
}
     8e6:	ff 91       	pop	r31
     8e8:	ef 91       	pop	r30
     8ea:	df 91       	pop	r29
     8ec:	cf 91       	pop	r28
     8ee:	bf 91       	pop	r27
     8f0:	af 91       	pop	r26
     8f2:	9f 91       	pop	r25
     8f4:	8f 91       	pop	r24
     8f6:	7f 91       	pop	r23
     8f8:	6f 91       	pop	r22
     8fa:	5f 91       	pop	r21
     8fc:	4f 91       	pop	r20
     8fe:	3f 91       	pop	r19
     900:	2f 91       	pop	r18
     902:	0f 90       	pop	r0
     904:	0f be       	out	0x3f, r0	; 63
     906:	0f 90       	pop	r0
     908:	1f 90       	pop	r1
     90a:	18 95       	reti

0000090c <__vector_21>:

ISR(ADC_vect){
     90c:	1f 92       	push	r1
     90e:	0f 92       	push	r0
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	0f 92       	push	r0
     914:	11 24       	eor	r1, r1
     916:	8f 93       	push	r24
     918:	ef 93       	push	r30
     91a:	ff 93       	push	r31
		switch_pot=(ADMUX&0x0F);
     91c:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7f807c>
     920:	8f 70       	andi	r24, 0x0F	; 15
     922:	80 93 46 01 	sts	0x0146, r24	; 0x800146 <__data_end>
		
		if(switch_pot==7){
     926:	87 30       	cpi	r24, 0x07	; 7
     928:	59 f4       	brne	.+22     	; 0x940 <__vector_21+0x34>
			valor_pot1=ADCH;
     92a:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     92e:	80 93 55 01 	sts	0x0155, r24	; 0x800155 <valor_pot1>
			ADMUX=((ADMUX&0xF0)|6);
     932:	ec e7       	ldi	r30, 0x7C	; 124
     934:	f0 e0       	ldi	r31, 0x00	; 0
     936:	80 81       	ld	r24, Z
     938:	80 7f       	andi	r24, 0xF0	; 240
     93a:	86 60       	ori	r24, 0x06	; 6
     93c:	80 83       	st	Z, r24
     93e:	24 c0       	rjmp	.+72     	; 0x988 <__vector_21+0x7c>
			} else if(switch_pot==6){
     940:	86 30       	cpi	r24, 0x06	; 6
     942:	59 f4       	brne	.+22     	; 0x95a <__vector_21+0x4e>
			valor_pot2=ADCH;
     944:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     948:	80 93 54 01 	sts	0x0154, r24	; 0x800154 <valor_pot2>
			ADMUX=((ADMUX&0xF0)|5);
     94c:	ec e7       	ldi	r30, 0x7C	; 124
     94e:	f0 e0       	ldi	r31, 0x00	; 0
     950:	80 81       	ld	r24, Z
     952:	80 7f       	andi	r24, 0xF0	; 240
     954:	85 60       	ori	r24, 0x05	; 5
     956:	80 83       	st	Z, r24
     958:	17 c0       	rjmp	.+46     	; 0x988 <__vector_21+0x7c>
			}else if(switch_pot==5){
     95a:	85 30       	cpi	r24, 0x05	; 5
     95c:	59 f4       	brne	.+22     	; 0x974 <__vector_21+0x68>
			valor_pot3=ADCH;
     95e:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     962:	80 93 53 01 	sts	0x0153, r24	; 0x800153 <valor_pot3>
			ADMUX=((ADMUX&0xF0)|4);
     966:	ec e7       	ldi	r30, 0x7C	; 124
     968:	f0 e0       	ldi	r31, 0x00	; 0
     96a:	80 81       	ld	r24, Z
     96c:	80 7f       	andi	r24, 0xF0	; 240
     96e:	84 60       	ori	r24, 0x04	; 4
     970:	80 83       	st	Z, r24
     972:	0a c0       	rjmp	.+20     	; 0x988 <__vector_21+0x7c>
			}else{
			valor_pot4=ADCH;
     974:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7f8079>
     978:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <valor_pot4>
			ADMUX=((ADMUX&0xF0)|7);
     97c:	ec e7       	ldi	r30, 0x7C	; 124
     97e:	f0 e0       	ldi	r31, 0x00	; 0
     980:	80 81       	ld	r24, Z
     982:	80 7f       	andi	r24, 0xF0	; 240
     984:	87 60       	ori	r24, 0x07	; 7
     986:	80 83       	st	Z, r24
		}
		
		ADCSRA|=(1<<ADIF);//apagar bandera
     988:	ea e7       	ldi	r30, 0x7A	; 122
     98a:	f0 e0       	ldi	r31, 0x00	; 0
     98c:	80 81       	ld	r24, Z
     98e:	80 61       	ori	r24, 0x10	; 16
     990:	80 83       	st	Z, r24
}
     992:	ff 91       	pop	r31
     994:	ef 91       	pop	r30
     996:	8f 91       	pop	r24
     998:	0f 90       	pop	r0
     99a:	0f be       	out	0x3f, r0	; 63
     99c:	0f 90       	pop	r0
     99e:	1f 90       	pop	r1
     9a0:	18 95       	reti

000009a2 <initPWM0>:
#include "pwm_0.h"
#include <avr/io.h>
#include <stdint.h>

void initPWM0(uint8_t invertido, uint16_t preescaler){
	DDRD|=(1<<DDD6)|(1<<DDD5);
     9a2:	9a b1       	in	r25, 0x0a	; 10
     9a4:	90 66       	ori	r25, 0x60	; 96
     9a6:	9a b9       	out	0x0a, r25	; 10
	
	TCCR0A=0;
     9a8:	14 bc       	out	0x24, r1	; 36
	TCCR0B=0;
     9aa:	15 bc       	out	0x25, r1	; 37
	
	if (invertido==1){
     9ac:	81 30       	cpi	r24, 0x01	; 1
     9ae:	39 f4       	brne	.+14     	; 0x9be <initPWM0+0x1c>
		TCCR0A|=(1<<COM0A1)|(1<<COM0A0);
     9b0:	84 b5       	in	r24, 0x24	; 36
     9b2:	80 6c       	ori	r24, 0xC0	; 192
     9b4:	84 bd       	out	0x24, r24	; 36
		TCCR0A|=(1<<COM0B1)|(1<<COM0B0);
     9b6:	84 b5       	in	r24, 0x24	; 36
     9b8:	80 63       	ori	r24, 0x30	; 48
     9ba:	84 bd       	out	0x24, r24	; 36
     9bc:	06 c0       	rjmp	.+12     	; 0x9ca <initPWM0+0x28>
		}else{
		TCCR0A|=(1<<COM0A1);
     9be:	84 b5       	in	r24, 0x24	; 36
     9c0:	80 68       	ori	r24, 0x80	; 128
     9c2:	84 bd       	out	0x24, r24	; 36
		TCCR0A|=(1<<COM0B1);
     9c4:	84 b5       	in	r24, 0x24	; 36
     9c6:	80 62       	ori	r24, 0x20	; 32
     9c8:	84 bd       	out	0x24, r24	; 36
	}
	
	TCCR0A |=(1<<WGM00)|(1<<WGM01);
     9ca:	84 b5       	in	r24, 0x24	; 36
     9cc:	83 60       	ori	r24, 0x03	; 3
     9ce:	84 bd       	out	0x24, r24	; 36
	//TCCR0B|=(1<<WGM02);
	
	switch (preescaler){
     9d0:	60 34       	cpi	r22, 0x40	; 64
     9d2:	71 05       	cpc	r23, r1
     9d4:	c1 f0       	breq	.+48     	; 0xa06 <initPWM0+0x64>
     9d6:	38 f4       	brcc	.+14     	; 0x9e6 <initPWM0+0x44>
     9d8:	61 15       	cp	r22, r1
     9da:	71 05       	cpc	r23, r1
     9dc:	61 f0       	breq	.+24     	; 0x9f6 <initPWM0+0x54>
     9de:	68 30       	cpi	r22, 0x08	; 8
     9e0:	71 05       	cpc	r23, r1
     9e2:	69 f0       	breq	.+26     	; 0x9fe <initPWM0+0x5c>
     9e4:	1c c0       	rjmp	.+56     	; 0xa1e <initPWM0+0x7c>
     9e6:	61 15       	cp	r22, r1
     9e8:	81 e0       	ldi	r24, 0x01	; 1
     9ea:	78 07       	cpc	r23, r24
     9ec:	81 f0       	breq	.+32     	; 0xa0e <initPWM0+0x6c>
     9ee:	61 15       	cp	r22, r1
     9f0:	74 40       	sbci	r23, 0x04	; 4
     9f2:	89 f0       	breq	.+34     	; 0xa16 <initPWM0+0x74>
     9f4:	14 c0       	rjmp	.+40     	; 0xa1e <initPWM0+0x7c>
		case 0:
		TCCR0B |=(1<<CS00);
     9f6:	85 b5       	in	r24, 0x25	; 37
     9f8:	81 60       	ori	r24, 0x01	; 1
     9fa:	85 bd       	out	0x25, r24	; 37
		break;
     9fc:	08 95       	ret
		case 8:
		TCCR0B |=(1<<CS01);
     9fe:	85 b5       	in	r24, 0x25	; 37
     a00:	82 60       	ori	r24, 0x02	; 2
     a02:	85 bd       	out	0x25, r24	; 37
		break;
     a04:	08 95       	ret
		case 64:
		TCCR0B |=(1<<CS00)|(1<<CS01);
     a06:	85 b5       	in	r24, 0x25	; 37
     a08:	83 60       	ori	r24, 0x03	; 3
     a0a:	85 bd       	out	0x25, r24	; 37
		break;
     a0c:	08 95       	ret
		case 256:
		TCCR0B |=(1<<CS02);
     a0e:	85 b5       	in	r24, 0x25	; 37
     a10:	84 60       	ori	r24, 0x04	; 4
     a12:	85 bd       	out	0x25, r24	; 37
		break;
     a14:	08 95       	ret
		case 1024:
		TCCR0B |=(1<<CS00)|(1<<CS02); //preescaler de 1024 para un periodo máximo de 4 segundos
     a16:	85 b5       	in	r24, 0x25	; 37
     a18:	85 60       	ori	r24, 0x05	; 5
     a1a:	85 bd       	out	0x25, r24	; 37
		break;
     a1c:	08 95       	ret
		default:
		TCCR0B|=(1<<CS00);
     a1e:	85 b5       	in	r24, 0x25	; 37
     a20:	81 60       	ori	r24, 0x01	; 1
     a22:	85 bd       	out	0x25, r24	; 37
     a24:	08 95       	ret

00000a26 <updateDC0>:
	}
	
}

void updateDC0(uint8_t duty_cycle,uint8_t duty_cycle2){
     a26:	cf 93       	push	r28
     a28:	df 93       	push	r29
     a2a:	c6 2f       	mov	r28, r22
	uint8_t a;
	uint8_t a2;
	a=((0.035*duty_cycle)+4.67);
     a2c:	68 2f       	mov	r22, r24
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	80 e0       	ldi	r24, 0x00	; 0
     a32:	90 e0       	ldi	r25, 0x00	; 0
     a34:	0e 94 83 06 	call	0xd06	; 0xd06 <__floatsisf>
     a38:	29 e2       	ldi	r18, 0x29	; 41
     a3a:	3c e5       	ldi	r19, 0x5C	; 92
     a3c:	4f e0       	ldi	r20, 0x0F	; 15
     a3e:	5d e3       	ldi	r21, 0x3D	; 61
     a40:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__mulsf3>
     a44:	24 ea       	ldi	r18, 0xA4	; 164
     a46:	30 e7       	ldi	r19, 0x70	; 112
     a48:	45 e9       	ldi	r20, 0x95	; 149
     a4a:	50 e4       	ldi	r21, 0x40	; 64
     a4c:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__addsf3>
     a50:	0e 94 52 06 	call	0xca4	; 0xca4 <__fixunssfsi>
     a54:	d6 2f       	mov	r29, r22
	a2=((0.027*duty_cycle2)+4.67);
     a56:	6c 2f       	mov	r22, r28
     a58:	70 e0       	ldi	r23, 0x00	; 0
     a5a:	80 e0       	ldi	r24, 0x00	; 0
     a5c:	90 e0       	ldi	r25, 0x00	; 0
     a5e:	0e 94 83 06 	call	0xd06	; 0xd06 <__floatsisf>
     a62:	2b e1       	ldi	r18, 0x1B	; 27
     a64:	3f e2       	ldi	r19, 0x2F	; 47
     a66:	4d ed       	ldi	r20, 0xDD	; 221
     a68:	5c e3       	ldi	r21, 0x3C	; 60
     a6a:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__mulsf3>
     a6e:	24 ea       	ldi	r18, 0xA4	; 164
     a70:	30 e7       	ldi	r19, 0x70	; 112
     a72:	45 e9       	ldi	r20, 0x95	; 149
     a74:	50 e4       	ldi	r21, 0x40	; 64
     a76:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__addsf3>
     a7a:	0e 94 52 06 	call	0xca4	; 0xca4 <__fixunssfsi>
	//pot2--> eyeballs-->135°
	OCR0A=a;
     a7e:	d7 bd       	out	0x27, r29	; 39
	//pot1--> boca-->90°
	OCR0B=a2;
     a80:	68 bd       	out	0x28, r22	; 40
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	08 95       	ret

00000a88 <initPWM1>:

#include "pwm_1.h"
uint8_t y=0;
uint8_t y2=0;
void initPWM1(uint8_t invertido, uint16_t preescaler){
	DDRB |=(1<<DDB1)|(1<<DDB2);
     a88:	94 b1       	in	r25, 0x04	; 4
     a8a:	96 60       	ori	r25, 0x06	; 6
     a8c:	94 b9       	out	0x04, r25	; 4
	TCCR1A=0;
     a8e:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__TEXT_REGION_LENGTH__+0x7f8080>
	TCCR1B=0;
     a92:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	
	if (invertido==1){
     a96:	81 30       	cpi	r24, 0x01	; 1
     a98:	49 f4       	brne	.+18     	; 0xaac <initPWM1+0x24>
		TCCR1A |=(1<<COM1A1)|(1<<COM1A0);//high
     a9a:	e0 e8       	ldi	r30, 0x80	; 128
     a9c:	f0 e0       	ldi	r31, 0x00	; 0
     a9e:	80 81       	ld	r24, Z
     aa0:	80 6c       	ori	r24, 0xC0	; 192
     aa2:	80 83       	st	Z, r24
		TCCR1A|=(1<<COM1B1)|(1<<COM1B0);
     aa4:	80 81       	ld	r24, Z
     aa6:	80 63       	ori	r24, 0x30	; 48
     aa8:	80 83       	st	Z, r24
     aaa:	08 c0       	rjmp	.+16     	; 0xabc <initPWM1+0x34>
		} else{
		TCCR1A |=(1<<COM1A1); //low
     aac:	e0 e8       	ldi	r30, 0x80	; 128
     aae:	f0 e0       	ldi	r31, 0x00	; 0
     ab0:	80 81       	ld	r24, Z
     ab2:	80 68       	ori	r24, 0x80	; 128
     ab4:	80 83       	st	Z, r24
		TCCR1A|=(1<<COM1B1);
     ab6:	80 81       	ld	r24, Z
     ab8:	80 62       	ori	r24, 0x20	; 32
     aba:	80 83       	st	Z, r24
	}
	
	switch(preescaler){
     abc:	60 34       	cpi	r22, 0x40	; 64
     abe:	71 05       	cpc	r23, r1
     ac0:	e1 f0       	breq	.+56     	; 0xafa <initPWM1+0x72>
     ac2:	38 f4       	brcc	.+14     	; 0xad2 <initPWM1+0x4a>
     ac4:	61 15       	cp	r22, r1
     ac6:	71 05       	cpc	r23, r1
     ac8:	61 f0       	breq	.+24     	; 0xae2 <initPWM1+0x5a>
     aca:	68 30       	cpi	r22, 0x08	; 8
     acc:	71 05       	cpc	r23, r1
     ace:	79 f0       	breq	.+30     	; 0xaee <initPWM1+0x66>
     ad0:	26 c0       	rjmp	.+76     	; 0xb1e <initPWM1+0x96>
     ad2:	61 15       	cp	r22, r1
     ad4:	81 e0       	ldi	r24, 0x01	; 1
     ad6:	78 07       	cpc	r23, r24
     ad8:	b1 f0       	breq	.+44     	; 0xb06 <initPWM1+0x7e>
     ada:	61 15       	cp	r22, r1
     adc:	74 40       	sbci	r23, 0x04	; 4
     ade:	c9 f0       	breq	.+50     	; 0xb12 <initPWM1+0x8a>
     ae0:	1e c0       	rjmp	.+60     	; 0xb1e <initPWM1+0x96>
		case 0:
		TCCR1B |=(1<<CS10);
     ae2:	e1 e8       	ldi	r30, 0x81	; 129
     ae4:	f0 e0       	ldi	r31, 0x00	; 0
     ae6:	80 81       	ld	r24, Z
     ae8:	81 60       	ori	r24, 0x01	; 1
     aea:	80 83       	st	Z, r24
		break;
     aec:	1d c0       	rjmp	.+58     	; 0xb28 <initPWM1+0xa0>
		case 8:
		TCCR1B |=(1<<CS11);
     aee:	e1 e8       	ldi	r30, 0x81	; 129
     af0:	f0 e0       	ldi	r31, 0x00	; 0
     af2:	80 81       	ld	r24, Z
     af4:	82 60       	ori	r24, 0x02	; 2
     af6:	80 83       	st	Z, r24
		break;
     af8:	17 c0       	rjmp	.+46     	; 0xb28 <initPWM1+0xa0>
		case 64:
		TCCR1B |=(1<<CS10)|(1<<CS11);
     afa:	e1 e8       	ldi	r30, 0x81	; 129
     afc:	f0 e0       	ldi	r31, 0x00	; 0
     afe:	80 81       	ld	r24, Z
     b00:	83 60       	ori	r24, 0x03	; 3
     b02:	80 83       	st	Z, r24
		break;
     b04:	11 c0       	rjmp	.+34     	; 0xb28 <initPWM1+0xa0>
		case 256:
		TCCR1B |=(1<<CS12);
     b06:	e1 e8       	ldi	r30, 0x81	; 129
     b08:	f0 e0       	ldi	r31, 0x00	; 0
     b0a:	80 81       	ld	r24, Z
     b0c:	84 60       	ori	r24, 0x04	; 4
     b0e:	80 83       	st	Z, r24
		break;
     b10:	0b c0       	rjmp	.+22     	; 0xb28 <initPWM1+0xa0>
		case 1024:
		TCCR1B |=(1<<CS12)|(1<<CS10); //preescaler de 1024 para un periodo máximo de 4 segundos
     b12:	e1 e8       	ldi	r30, 0x81	; 129
     b14:	f0 e0       	ldi	r31, 0x00	; 0
     b16:	80 81       	ld	r24, Z
     b18:	85 60       	ori	r24, 0x05	; 5
     b1a:	80 83       	st	Z, r24
		break;
     b1c:	05 c0       	rjmp	.+10     	; 0xb28 <initPWM1+0xa0>
		default:
		TCCR1B|=(1<<CS10);
     b1e:	e1 e8       	ldi	r30, 0x81	; 129
     b20:	f0 e0       	ldi	r31, 0x00	; 0
     b22:	80 81       	ld	r24, Z
     b24:	81 60       	ori	r24, 0x01	; 1
     b26:	80 83       	st	Z, r24
	}
	
	//FAST PWM 8 bits
	TCCR1A |=(1<<WGM11);
     b28:	e0 e8       	ldi	r30, 0x80	; 128
     b2a:	f0 e0       	ldi	r31, 0x00	; 0
     b2c:	80 81       	ld	r24, Z
     b2e:	82 60       	ori	r24, 0x02	; 2
     b30:	80 83       	st	Z, r24
	TCCR1B |=(1<<WGM12)|(1<<WGM12);
     b32:	e1 e8       	ldi	r30, 0x81	; 129
     b34:	f0 e0       	ldi	r31, 0x00	; 0
     b36:	80 81       	ld	r24, Z
     b38:	88 60       	ori	r24, 0x08	; 8
     b3a:	80 83       	st	Z, r24
	
	ICR1=160;
     b3c:	80 ea       	ldi	r24, 0xA0	; 160
     b3e:	90 e0       	ldi	r25, 0x00	; 0
     b40:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7f8087>
     b44:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7f8086>
     b48:	08 95       	ret

00000b4a <updateDC1>:
	
	
}


void updateDC1(uint8_t prc_duty, uint8_t prc_duty2){
     b4a:	cf 93       	push	r28
     b4c:	df 93       	push	r29
     b4e:	d6 2f       	mov	r29, r22
	y=((0.027*prc_duty)+4.66);
     b50:	68 2f       	mov	r22, r24
     b52:	70 e0       	ldi	r23, 0x00	; 0
     b54:	80 e0       	ldi	r24, 0x00	; 0
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 83 06 	call	0xd06	; 0xd06 <__floatsisf>
     b5c:	2b e1       	ldi	r18, 0x1B	; 27
     b5e:	3f e2       	ldi	r19, 0x2F	; 47
     b60:	4d ed       	ldi	r20, 0xDD	; 221
     b62:	5c e3       	ldi	r21, 0x3C	; 60
     b64:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__mulsf3>
     b68:	28 eb       	ldi	r18, 0xB8	; 184
     b6a:	3e e1       	ldi	r19, 0x1E	; 30
     b6c:	45 e9       	ldi	r20, 0x95	; 149
     b6e:	50 e4       	ldi	r21, 0x40	; 64
     b70:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__addsf3>
     b74:	0e 94 52 06 	call	0xca4	; 0xca4 <__fixunssfsi>
     b78:	c6 2f       	mov	r28, r22
     b7a:	60 93 5a 01 	sts	0x015A, r22	; 0x80015a <y>
	y2=((0.027*prc_duty2)+4.66);
     b7e:	6d 2f       	mov	r22, r29
     b80:	70 e0       	ldi	r23, 0x00	; 0
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	0e 94 83 06 	call	0xd06	; 0xd06 <__floatsisf>
     b8a:	2b e1       	ldi	r18, 0x1B	; 27
     b8c:	3f e2       	ldi	r19, 0x2F	; 47
     b8e:	4d ed       	ldi	r20, 0xDD	; 221
     b90:	5c e3       	ldi	r21, 0x3C	; 60
     b92:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__mulsf3>
     b96:	28 eb       	ldi	r18, 0xB8	; 184
     b98:	3e e1       	ldi	r19, 0x1E	; 30
     b9a:	45 e9       	ldi	r20, 0x95	; 149
     b9c:	50 e4       	ldi	r21, 0x40	; 64
     b9e:	0e 94 e6 05 	call	0xbcc	; 0xbcc <__addsf3>
     ba2:	0e 94 52 06 	call	0xca4	; 0xca4 <__fixunssfsi>
     ba6:	60 93 59 01 	sts	0x0159, r22	; 0x800159 <y2>
	//ambos eyelids van de 0 a 90°
	//OCR1A-->pot4 eyelid derecha
	OCR1A=y;
     baa:	6c 2f       	mov	r22, r28
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
     bb2:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	//OCR1B-->pot3 eyelid izquierda
	OCR1B=y2;
     bb6:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <y2>
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7f808b>
     bc0:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7f808a>
}
     bc4:	df 91       	pop	r29
     bc6:	cf 91       	pop	r28
     bc8:	08 95       	ret

00000bca <__subsf3>:
     bca:	50 58       	subi	r21, 0x80	; 128

00000bcc <__addsf3>:
     bcc:	bb 27       	eor	r27, r27
     bce:	aa 27       	eor	r26, r26
     bd0:	0e 94 fd 05 	call	0xbfa	; 0xbfa <__addsf3x>
     bd4:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__fp_round>
     bd8:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__fp_pscA>
     bdc:	38 f0       	brcs	.+14     	; 0xbec <__addsf3+0x20>
     bde:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__fp_pscB>
     be2:	20 f0       	brcs	.+8      	; 0xbec <__addsf3+0x20>
     be4:	39 f4       	brne	.+14     	; 0xbf4 <__addsf3+0x28>
     be6:	9f 3f       	cpi	r25, 0xFF	; 255
     be8:	19 f4       	brne	.+6      	; 0xbf0 <__addsf3+0x24>
     bea:	26 f4       	brtc	.+8      	; 0xbf4 <__addsf3+0x28>
     bec:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_nan>
     bf0:	0e f4       	brtc	.+2      	; 0xbf4 <__addsf3+0x28>
     bf2:	e0 95       	com	r30
     bf4:	e7 fb       	bst	r30, 7
     bf6:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__fp_inf>

00000bfa <__addsf3x>:
     bfa:	e9 2f       	mov	r30, r25
     bfc:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fp_split3>
     c00:	58 f3       	brcs	.-42     	; 0xbd8 <__addsf3+0xc>
     c02:	ba 17       	cp	r27, r26
     c04:	62 07       	cpc	r22, r18
     c06:	73 07       	cpc	r23, r19
     c08:	84 07       	cpc	r24, r20
     c0a:	95 07       	cpc	r25, r21
     c0c:	20 f0       	brcs	.+8      	; 0xc16 <__addsf3x+0x1c>
     c0e:	79 f4       	brne	.+30     	; 0xc2e <__addsf3x+0x34>
     c10:	a6 f5       	brtc	.+104    	; 0xc7a <__addsf3x+0x80>
     c12:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__fp_zero>
     c16:	0e f4       	brtc	.+2      	; 0xc1a <__addsf3x+0x20>
     c18:	e0 95       	com	r30
     c1a:	0b 2e       	mov	r0, r27
     c1c:	ba 2f       	mov	r27, r26
     c1e:	a0 2d       	mov	r26, r0
     c20:	0b 01       	movw	r0, r22
     c22:	b9 01       	movw	r22, r18
     c24:	90 01       	movw	r18, r0
     c26:	0c 01       	movw	r0, r24
     c28:	ca 01       	movw	r24, r20
     c2a:	a0 01       	movw	r20, r0
     c2c:	11 24       	eor	r1, r1
     c2e:	ff 27       	eor	r31, r31
     c30:	59 1b       	sub	r21, r25
     c32:	99 f0       	breq	.+38     	; 0xc5a <__addsf3x+0x60>
     c34:	59 3f       	cpi	r21, 0xF9	; 249
     c36:	50 f4       	brcc	.+20     	; 0xc4c <__addsf3x+0x52>
     c38:	50 3e       	cpi	r21, 0xE0	; 224
     c3a:	68 f1       	brcs	.+90     	; 0xc96 <__addsf3x+0x9c>
     c3c:	1a 16       	cp	r1, r26
     c3e:	f0 40       	sbci	r31, 0x00	; 0
     c40:	a2 2f       	mov	r26, r18
     c42:	23 2f       	mov	r18, r19
     c44:	34 2f       	mov	r19, r20
     c46:	44 27       	eor	r20, r20
     c48:	58 5f       	subi	r21, 0xF8	; 248
     c4a:	f3 cf       	rjmp	.-26     	; 0xc32 <__addsf3x+0x38>
     c4c:	46 95       	lsr	r20
     c4e:	37 95       	ror	r19
     c50:	27 95       	ror	r18
     c52:	a7 95       	ror	r26
     c54:	f0 40       	sbci	r31, 0x00	; 0
     c56:	53 95       	inc	r21
     c58:	c9 f7       	brne	.-14     	; 0xc4c <__addsf3x+0x52>
     c5a:	7e f4       	brtc	.+30     	; 0xc7a <__addsf3x+0x80>
     c5c:	1f 16       	cp	r1, r31
     c5e:	ba 0b       	sbc	r27, r26
     c60:	62 0b       	sbc	r22, r18
     c62:	73 0b       	sbc	r23, r19
     c64:	84 0b       	sbc	r24, r20
     c66:	ba f0       	brmi	.+46     	; 0xc96 <__addsf3x+0x9c>
     c68:	91 50       	subi	r25, 0x01	; 1
     c6a:	a1 f0       	breq	.+40     	; 0xc94 <__addsf3x+0x9a>
     c6c:	ff 0f       	add	r31, r31
     c6e:	bb 1f       	adc	r27, r27
     c70:	66 1f       	adc	r22, r22
     c72:	77 1f       	adc	r23, r23
     c74:	88 1f       	adc	r24, r24
     c76:	c2 f7       	brpl	.-16     	; 0xc68 <__addsf3x+0x6e>
     c78:	0e c0       	rjmp	.+28     	; 0xc96 <__addsf3x+0x9c>
     c7a:	ba 0f       	add	r27, r26
     c7c:	62 1f       	adc	r22, r18
     c7e:	73 1f       	adc	r23, r19
     c80:	84 1f       	adc	r24, r20
     c82:	48 f4       	brcc	.+18     	; 0xc96 <__addsf3x+0x9c>
     c84:	87 95       	ror	r24
     c86:	77 95       	ror	r23
     c88:	67 95       	ror	r22
     c8a:	b7 95       	ror	r27
     c8c:	f7 95       	ror	r31
     c8e:	9e 3f       	cpi	r25, 0xFE	; 254
     c90:	08 f0       	brcs	.+2      	; 0xc94 <__addsf3x+0x9a>
     c92:	b0 cf       	rjmp	.-160    	; 0xbf4 <__addsf3+0x28>
     c94:	93 95       	inc	r25
     c96:	88 0f       	add	r24, r24
     c98:	08 f0       	brcs	.+2      	; 0xc9c <__addsf3x+0xa2>
     c9a:	99 27       	eor	r25, r25
     c9c:	ee 0f       	add	r30, r30
     c9e:	97 95       	ror	r25
     ca0:	87 95       	ror	r24
     ca2:	08 95       	ret

00000ca4 <__fixunssfsi>:
     ca4:	0e 94 ee 06 	call	0xddc	; 0xddc <__fp_splitA>
     ca8:	88 f0       	brcs	.+34     	; 0xccc <__fixunssfsi+0x28>
     caa:	9f 57       	subi	r25, 0x7F	; 127
     cac:	98 f0       	brcs	.+38     	; 0xcd4 <__fixunssfsi+0x30>
     cae:	b9 2f       	mov	r27, r25
     cb0:	99 27       	eor	r25, r25
     cb2:	b7 51       	subi	r27, 0x17	; 23
     cb4:	b0 f0       	brcs	.+44     	; 0xce2 <__fixunssfsi+0x3e>
     cb6:	e1 f0       	breq	.+56     	; 0xcf0 <__fixunssfsi+0x4c>
     cb8:	66 0f       	add	r22, r22
     cba:	77 1f       	adc	r23, r23
     cbc:	88 1f       	adc	r24, r24
     cbe:	99 1f       	adc	r25, r25
     cc0:	1a f0       	brmi	.+6      	; 0xcc8 <__fixunssfsi+0x24>
     cc2:	ba 95       	dec	r27
     cc4:	c9 f7       	brne	.-14     	; 0xcb8 <__fixunssfsi+0x14>
     cc6:	14 c0       	rjmp	.+40     	; 0xcf0 <__fixunssfsi+0x4c>
     cc8:	b1 30       	cpi	r27, 0x01	; 1
     cca:	91 f0       	breq	.+36     	; 0xcf0 <__fixunssfsi+0x4c>
     ccc:	0e 94 08 07 	call	0xe10	; 0xe10 <__fp_zero>
     cd0:	b1 e0       	ldi	r27, 0x01	; 1
     cd2:	08 95       	ret
     cd4:	0c 94 08 07 	jmp	0xe10	; 0xe10 <__fp_zero>
     cd8:	67 2f       	mov	r22, r23
     cda:	78 2f       	mov	r23, r24
     cdc:	88 27       	eor	r24, r24
     cde:	b8 5f       	subi	r27, 0xF8	; 248
     ce0:	39 f0       	breq	.+14     	; 0xcf0 <__fixunssfsi+0x4c>
     ce2:	b9 3f       	cpi	r27, 0xF9	; 249
     ce4:	cc f3       	brlt	.-14     	; 0xcd8 <__fixunssfsi+0x34>
     ce6:	86 95       	lsr	r24
     ce8:	77 95       	ror	r23
     cea:	67 95       	ror	r22
     cec:	b3 95       	inc	r27
     cee:	d9 f7       	brne	.-10     	; 0xce6 <__fixunssfsi+0x42>
     cf0:	3e f4       	brtc	.+14     	; 0xd00 <__fixunssfsi+0x5c>
     cf2:	90 95       	com	r25
     cf4:	80 95       	com	r24
     cf6:	70 95       	com	r23
     cf8:	61 95       	neg	r22
     cfa:	7f 4f       	sbci	r23, 0xFF	; 255
     cfc:	8f 4f       	sbci	r24, 0xFF	; 255
     cfe:	9f 4f       	sbci	r25, 0xFF	; 255
     d00:	08 95       	ret

00000d02 <__floatunsisf>:
     d02:	e8 94       	clt
     d04:	09 c0       	rjmp	.+18     	; 0xd18 <__floatsisf+0x12>

00000d06 <__floatsisf>:
     d06:	97 fb       	bst	r25, 7
     d08:	3e f4       	brtc	.+14     	; 0xd18 <__floatsisf+0x12>
     d0a:	90 95       	com	r25
     d0c:	80 95       	com	r24
     d0e:	70 95       	com	r23
     d10:	61 95       	neg	r22
     d12:	7f 4f       	sbci	r23, 0xFF	; 255
     d14:	8f 4f       	sbci	r24, 0xFF	; 255
     d16:	9f 4f       	sbci	r25, 0xFF	; 255
     d18:	99 23       	and	r25, r25
     d1a:	a9 f0       	breq	.+42     	; 0xd46 <__floatsisf+0x40>
     d1c:	f9 2f       	mov	r31, r25
     d1e:	96 e9       	ldi	r25, 0x96	; 150
     d20:	bb 27       	eor	r27, r27
     d22:	93 95       	inc	r25
     d24:	f6 95       	lsr	r31
     d26:	87 95       	ror	r24
     d28:	77 95       	ror	r23
     d2a:	67 95       	ror	r22
     d2c:	b7 95       	ror	r27
     d2e:	f1 11       	cpse	r31, r1
     d30:	f8 cf       	rjmp	.-16     	; 0xd22 <__floatsisf+0x1c>
     d32:	fa f4       	brpl	.+62     	; 0xd72 <__floatsisf+0x6c>
     d34:	bb 0f       	add	r27, r27
     d36:	11 f4       	brne	.+4      	; 0xd3c <__floatsisf+0x36>
     d38:	60 ff       	sbrs	r22, 0
     d3a:	1b c0       	rjmp	.+54     	; 0xd72 <__floatsisf+0x6c>
     d3c:	6f 5f       	subi	r22, 0xFF	; 255
     d3e:	7f 4f       	sbci	r23, 0xFF	; 255
     d40:	8f 4f       	sbci	r24, 0xFF	; 255
     d42:	9f 4f       	sbci	r25, 0xFF	; 255
     d44:	16 c0       	rjmp	.+44     	; 0xd72 <__floatsisf+0x6c>
     d46:	88 23       	and	r24, r24
     d48:	11 f0       	breq	.+4      	; 0xd4e <__floatsisf+0x48>
     d4a:	96 e9       	ldi	r25, 0x96	; 150
     d4c:	11 c0       	rjmp	.+34     	; 0xd70 <__floatsisf+0x6a>
     d4e:	77 23       	and	r23, r23
     d50:	21 f0       	breq	.+8      	; 0xd5a <__floatsisf+0x54>
     d52:	9e e8       	ldi	r25, 0x8E	; 142
     d54:	87 2f       	mov	r24, r23
     d56:	76 2f       	mov	r23, r22
     d58:	05 c0       	rjmp	.+10     	; 0xd64 <__floatsisf+0x5e>
     d5a:	66 23       	and	r22, r22
     d5c:	71 f0       	breq	.+28     	; 0xd7a <__floatsisf+0x74>
     d5e:	96 e8       	ldi	r25, 0x86	; 134
     d60:	86 2f       	mov	r24, r22
     d62:	70 e0       	ldi	r23, 0x00	; 0
     d64:	60 e0       	ldi	r22, 0x00	; 0
     d66:	2a f0       	brmi	.+10     	; 0xd72 <__floatsisf+0x6c>
     d68:	9a 95       	dec	r25
     d6a:	66 0f       	add	r22, r22
     d6c:	77 1f       	adc	r23, r23
     d6e:	88 1f       	adc	r24, r24
     d70:	da f7       	brpl	.-10     	; 0xd68 <__floatsisf+0x62>
     d72:	88 0f       	add	r24, r24
     d74:	96 95       	lsr	r25
     d76:	87 95       	ror	r24
     d78:	97 f9       	bld	r25, 7
     d7a:	08 95       	ret

00000d7c <__fp_inf>:
     d7c:	97 f9       	bld	r25, 7
     d7e:	9f 67       	ori	r25, 0x7F	; 127
     d80:	80 e8       	ldi	r24, 0x80	; 128
     d82:	70 e0       	ldi	r23, 0x00	; 0
     d84:	60 e0       	ldi	r22, 0x00	; 0
     d86:	08 95       	ret

00000d88 <__fp_nan>:
     d88:	9f ef       	ldi	r25, 0xFF	; 255
     d8a:	80 ec       	ldi	r24, 0xC0	; 192
     d8c:	08 95       	ret

00000d8e <__fp_pscA>:
     d8e:	00 24       	eor	r0, r0
     d90:	0a 94       	dec	r0
     d92:	16 16       	cp	r1, r22
     d94:	17 06       	cpc	r1, r23
     d96:	18 06       	cpc	r1, r24
     d98:	09 06       	cpc	r0, r25
     d9a:	08 95       	ret

00000d9c <__fp_pscB>:
     d9c:	00 24       	eor	r0, r0
     d9e:	0a 94       	dec	r0
     da0:	12 16       	cp	r1, r18
     da2:	13 06       	cpc	r1, r19
     da4:	14 06       	cpc	r1, r20
     da6:	05 06       	cpc	r0, r21
     da8:	08 95       	ret

00000daa <__fp_round>:
     daa:	09 2e       	mov	r0, r25
     dac:	03 94       	inc	r0
     dae:	00 0c       	add	r0, r0
     db0:	11 f4       	brne	.+4      	; 0xdb6 <__fp_round+0xc>
     db2:	88 23       	and	r24, r24
     db4:	52 f0       	brmi	.+20     	; 0xdca <__fp_round+0x20>
     db6:	bb 0f       	add	r27, r27
     db8:	40 f4       	brcc	.+16     	; 0xdca <__fp_round+0x20>
     dba:	bf 2b       	or	r27, r31
     dbc:	11 f4       	brne	.+4      	; 0xdc2 <__fp_round+0x18>
     dbe:	60 ff       	sbrs	r22, 0
     dc0:	04 c0       	rjmp	.+8      	; 0xdca <__fp_round+0x20>
     dc2:	6f 5f       	subi	r22, 0xFF	; 255
     dc4:	7f 4f       	sbci	r23, 0xFF	; 255
     dc6:	8f 4f       	sbci	r24, 0xFF	; 255
     dc8:	9f 4f       	sbci	r25, 0xFF	; 255
     dca:	08 95       	ret

00000dcc <__fp_split3>:
     dcc:	57 fd       	sbrc	r21, 7
     dce:	90 58       	subi	r25, 0x80	; 128
     dd0:	44 0f       	add	r20, r20
     dd2:	55 1f       	adc	r21, r21
     dd4:	59 f0       	breq	.+22     	; 0xdec <__fp_splitA+0x10>
     dd6:	5f 3f       	cpi	r21, 0xFF	; 255
     dd8:	71 f0       	breq	.+28     	; 0xdf6 <__fp_splitA+0x1a>
     dda:	47 95       	ror	r20

00000ddc <__fp_splitA>:
     ddc:	88 0f       	add	r24, r24
     dde:	97 fb       	bst	r25, 7
     de0:	99 1f       	adc	r25, r25
     de2:	61 f0       	breq	.+24     	; 0xdfc <__fp_splitA+0x20>
     de4:	9f 3f       	cpi	r25, 0xFF	; 255
     de6:	79 f0       	breq	.+30     	; 0xe06 <__fp_splitA+0x2a>
     de8:	87 95       	ror	r24
     dea:	08 95       	ret
     dec:	12 16       	cp	r1, r18
     dee:	13 06       	cpc	r1, r19
     df0:	14 06       	cpc	r1, r20
     df2:	55 1f       	adc	r21, r21
     df4:	f2 cf       	rjmp	.-28     	; 0xdda <__fp_split3+0xe>
     df6:	46 95       	lsr	r20
     df8:	f1 df       	rcall	.-30     	; 0xddc <__fp_splitA>
     dfa:	08 c0       	rjmp	.+16     	; 0xe0c <__fp_splitA+0x30>
     dfc:	16 16       	cp	r1, r22
     dfe:	17 06       	cpc	r1, r23
     e00:	18 06       	cpc	r1, r24
     e02:	99 1f       	adc	r25, r25
     e04:	f1 cf       	rjmp	.-30     	; 0xde8 <__fp_splitA+0xc>
     e06:	86 95       	lsr	r24
     e08:	71 05       	cpc	r23, r1
     e0a:	61 05       	cpc	r22, r1
     e0c:	08 94       	sec
     e0e:	08 95       	ret

00000e10 <__fp_zero>:
     e10:	e8 94       	clt

00000e12 <__fp_szero>:
     e12:	bb 27       	eor	r27, r27
     e14:	66 27       	eor	r22, r22
     e16:	77 27       	eor	r23, r23
     e18:	cb 01       	movw	r24, r22
     e1a:	97 f9       	bld	r25, 7
     e1c:	08 95       	ret

00000e1e <__mulsf3>:
     e1e:	0e 94 22 07 	call	0xe44	; 0xe44 <__mulsf3x>
     e22:	0c 94 d5 06 	jmp	0xdaa	; 0xdaa <__fp_round>
     e26:	0e 94 c7 06 	call	0xd8e	; 0xd8e <__fp_pscA>
     e2a:	38 f0       	brcs	.+14     	; 0xe3a <__mulsf3+0x1c>
     e2c:	0e 94 ce 06 	call	0xd9c	; 0xd9c <__fp_pscB>
     e30:	20 f0       	brcs	.+8      	; 0xe3a <__mulsf3+0x1c>
     e32:	95 23       	and	r25, r21
     e34:	11 f0       	breq	.+4      	; 0xe3a <__mulsf3+0x1c>
     e36:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__fp_inf>
     e3a:	0c 94 c4 06 	jmp	0xd88	; 0xd88 <__fp_nan>
     e3e:	11 24       	eor	r1, r1
     e40:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__fp_szero>

00000e44 <__mulsf3x>:
     e44:	0e 94 e6 06 	call	0xdcc	; 0xdcc <__fp_split3>
     e48:	70 f3       	brcs	.-36     	; 0xe26 <__mulsf3+0x8>

00000e4a <__mulsf3_pse>:
     e4a:	95 9f       	mul	r25, r21
     e4c:	c1 f3       	breq	.-16     	; 0xe3e <__mulsf3+0x20>
     e4e:	95 0f       	add	r25, r21
     e50:	50 e0       	ldi	r21, 0x00	; 0
     e52:	55 1f       	adc	r21, r21
     e54:	62 9f       	mul	r22, r18
     e56:	f0 01       	movw	r30, r0
     e58:	72 9f       	mul	r23, r18
     e5a:	bb 27       	eor	r27, r27
     e5c:	f0 0d       	add	r31, r0
     e5e:	b1 1d       	adc	r27, r1
     e60:	63 9f       	mul	r22, r19
     e62:	aa 27       	eor	r26, r26
     e64:	f0 0d       	add	r31, r0
     e66:	b1 1d       	adc	r27, r1
     e68:	aa 1f       	adc	r26, r26
     e6a:	64 9f       	mul	r22, r20
     e6c:	66 27       	eor	r22, r22
     e6e:	b0 0d       	add	r27, r0
     e70:	a1 1d       	adc	r26, r1
     e72:	66 1f       	adc	r22, r22
     e74:	82 9f       	mul	r24, r18
     e76:	22 27       	eor	r18, r18
     e78:	b0 0d       	add	r27, r0
     e7a:	a1 1d       	adc	r26, r1
     e7c:	62 1f       	adc	r22, r18
     e7e:	73 9f       	mul	r23, r19
     e80:	b0 0d       	add	r27, r0
     e82:	a1 1d       	adc	r26, r1
     e84:	62 1f       	adc	r22, r18
     e86:	83 9f       	mul	r24, r19
     e88:	a0 0d       	add	r26, r0
     e8a:	61 1d       	adc	r22, r1
     e8c:	22 1f       	adc	r18, r18
     e8e:	74 9f       	mul	r23, r20
     e90:	33 27       	eor	r19, r19
     e92:	a0 0d       	add	r26, r0
     e94:	61 1d       	adc	r22, r1
     e96:	23 1f       	adc	r18, r19
     e98:	84 9f       	mul	r24, r20
     e9a:	60 0d       	add	r22, r0
     e9c:	21 1d       	adc	r18, r1
     e9e:	82 2f       	mov	r24, r18
     ea0:	76 2f       	mov	r23, r22
     ea2:	6a 2f       	mov	r22, r26
     ea4:	11 24       	eor	r1, r1
     ea6:	9f 57       	subi	r25, 0x7F	; 127
     ea8:	50 40       	sbci	r21, 0x00	; 0
     eaa:	9a f0       	brmi	.+38     	; 0xed2 <__mulsf3_pse+0x88>
     eac:	f1 f0       	breq	.+60     	; 0xeea <__mulsf3_pse+0xa0>
     eae:	88 23       	and	r24, r24
     eb0:	4a f0       	brmi	.+18     	; 0xec4 <__mulsf3_pse+0x7a>
     eb2:	ee 0f       	add	r30, r30
     eb4:	ff 1f       	adc	r31, r31
     eb6:	bb 1f       	adc	r27, r27
     eb8:	66 1f       	adc	r22, r22
     eba:	77 1f       	adc	r23, r23
     ebc:	88 1f       	adc	r24, r24
     ebe:	91 50       	subi	r25, 0x01	; 1
     ec0:	50 40       	sbci	r21, 0x00	; 0
     ec2:	a9 f7       	brne	.-22     	; 0xeae <__mulsf3_pse+0x64>
     ec4:	9e 3f       	cpi	r25, 0xFE	; 254
     ec6:	51 05       	cpc	r21, r1
     ec8:	80 f0       	brcs	.+32     	; 0xeea <__mulsf3_pse+0xa0>
     eca:	0c 94 be 06 	jmp	0xd7c	; 0xd7c <__fp_inf>
     ece:	0c 94 09 07 	jmp	0xe12	; 0xe12 <__fp_szero>
     ed2:	5f 3f       	cpi	r21, 0xFF	; 255
     ed4:	e4 f3       	brlt	.-8      	; 0xece <__mulsf3_pse+0x84>
     ed6:	98 3e       	cpi	r25, 0xE8	; 232
     ed8:	d4 f3       	brlt	.-12     	; 0xece <__mulsf3_pse+0x84>
     eda:	86 95       	lsr	r24
     edc:	77 95       	ror	r23
     ede:	67 95       	ror	r22
     ee0:	b7 95       	ror	r27
     ee2:	f7 95       	ror	r31
     ee4:	e7 95       	ror	r30
     ee6:	9f 5f       	subi	r25, 0xFF	; 255
     ee8:	c1 f7       	brne	.-16     	; 0xeda <__mulsf3_pse+0x90>
     eea:	fe 2b       	or	r31, r30
     eec:	88 0f       	add	r24, r24
     eee:	91 1d       	adc	r25, r1
     ef0:	96 95       	lsr	r25
     ef2:	87 95       	ror	r24
     ef4:	97 f9       	bld	r25, 7
     ef6:	08 95       	ret

00000ef8 <atoi>:
     ef8:	fc 01       	movw	r30, r24
     efa:	88 27       	eor	r24, r24
     efc:	99 27       	eor	r25, r25
     efe:	e8 94       	clt
     f00:	21 91       	ld	r18, Z+
     f02:	20 32       	cpi	r18, 0x20	; 32
     f04:	e9 f3       	breq	.-6      	; 0xf00 <atoi+0x8>
     f06:	29 30       	cpi	r18, 0x09	; 9
     f08:	10 f0       	brcs	.+4      	; 0xf0e <atoi+0x16>
     f0a:	2e 30       	cpi	r18, 0x0E	; 14
     f0c:	c8 f3       	brcs	.-14     	; 0xf00 <atoi+0x8>
     f0e:	2b 32       	cpi	r18, 0x2B	; 43
     f10:	41 f0       	breq	.+16     	; 0xf22 <atoi+0x2a>
     f12:	2d 32       	cpi	r18, 0x2D	; 45
     f14:	39 f4       	brne	.+14     	; 0xf24 <atoi+0x2c>
     f16:	68 94       	set
     f18:	04 c0       	rjmp	.+8      	; 0xf22 <atoi+0x2a>
     f1a:	0e 94 a8 07 	call	0xf50	; 0xf50 <__mulhi_const_10>
     f1e:	82 0f       	add	r24, r18
     f20:	91 1d       	adc	r25, r1
     f22:	21 91       	ld	r18, Z+
     f24:	20 53       	subi	r18, 0x30	; 48
     f26:	2a 30       	cpi	r18, 0x0A	; 10
     f28:	c0 f3       	brcs	.-16     	; 0xf1a <atoi+0x22>
     f2a:	1e f4       	brtc	.+6      	; 0xf32 <atoi+0x3a>
     f2c:	90 95       	com	r25
     f2e:	81 95       	neg	r24
     f30:	9f 4f       	sbci	r25, 0xFF	; 255
     f32:	08 95       	ret

00000f34 <strncmp>:
     f34:	fb 01       	movw	r30, r22
     f36:	dc 01       	movw	r26, r24
     f38:	41 50       	subi	r20, 0x01	; 1
     f3a:	50 40       	sbci	r21, 0x00	; 0
     f3c:	30 f0       	brcs	.+12     	; 0xf4a <strncmp+0x16>
     f3e:	8d 91       	ld	r24, X+
     f40:	01 90       	ld	r0, Z+
     f42:	80 19       	sub	r24, r0
     f44:	19 f4       	brne	.+6      	; 0xf4c <strncmp+0x18>
     f46:	00 20       	and	r0, r0
     f48:	b9 f7       	brne	.-18     	; 0xf38 <strncmp+0x4>
     f4a:	88 1b       	sub	r24, r24
     f4c:	99 0b       	sbc	r25, r25
     f4e:	08 95       	ret

00000f50 <__mulhi_const_10>:
     f50:	7a e0       	ldi	r23, 0x0A	; 10
     f52:	97 9f       	mul	r25, r23
     f54:	90 2d       	mov	r25, r0
     f56:	87 9f       	mul	r24, r23
     f58:	80 2d       	mov	r24, r0
     f5a:	91 0d       	add	r25, r1
     f5c:	11 24       	eor	r1, r1
     f5e:	08 95       	ret

00000f60 <snprintf>:
     f60:	ae e0       	ldi	r26, 0x0E	; 14
     f62:	b0 e0       	ldi	r27, 0x00	; 0
     f64:	e6 eb       	ldi	r30, 0xB6	; 182
     f66:	f7 e0       	ldi	r31, 0x07	; 7
     f68:	0c 94 95 0a 	jmp	0x152a	; 0x152a <__prologue_saves__+0x1c>
     f6c:	0d 89       	ldd	r16, Y+21	; 0x15
     f6e:	1e 89       	ldd	r17, Y+22	; 0x16
     f70:	8f 89       	ldd	r24, Y+23	; 0x17
     f72:	98 8d       	ldd	r25, Y+24	; 0x18
     f74:	26 e0       	ldi	r18, 0x06	; 6
     f76:	2c 83       	std	Y+4, r18	; 0x04
     f78:	1a 83       	std	Y+2, r17	; 0x02
     f7a:	09 83       	std	Y+1, r16	; 0x01
     f7c:	97 ff       	sbrs	r25, 7
     f7e:	02 c0       	rjmp	.+4      	; 0xf84 <snprintf+0x24>
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e8       	ldi	r25, 0x80	; 128
     f84:	01 97       	sbiw	r24, 0x01	; 1
     f86:	9e 83       	std	Y+6, r25	; 0x06
     f88:	8d 83       	std	Y+5, r24	; 0x05
     f8a:	ae 01       	movw	r20, r28
     f8c:	45 5e       	subi	r20, 0xE5	; 229
     f8e:	5f 4f       	sbci	r21, 0xFF	; 255
     f90:	69 8d       	ldd	r22, Y+25	; 0x19
     f92:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f94:	ce 01       	movw	r24, r28
     f96:	01 96       	adiw	r24, 0x01	; 1
     f98:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <vfprintf>
     f9c:	4d 81       	ldd	r20, Y+5	; 0x05
     f9e:	5e 81       	ldd	r21, Y+6	; 0x06
     fa0:	57 fd       	sbrc	r21, 7
     fa2:	0a c0       	rjmp	.+20     	; 0xfb8 <snprintf+0x58>
     fa4:	2f 81       	ldd	r18, Y+7	; 0x07
     fa6:	38 85       	ldd	r19, Y+8	; 0x08
     fa8:	42 17       	cp	r20, r18
     faa:	53 07       	cpc	r21, r19
     fac:	0c f4       	brge	.+2      	; 0xfb0 <snprintf+0x50>
     fae:	9a 01       	movw	r18, r20
     fb0:	f8 01       	movw	r30, r16
     fb2:	e2 0f       	add	r30, r18
     fb4:	f3 1f       	adc	r31, r19
     fb6:	10 82       	st	Z, r1
     fb8:	2e 96       	adiw	r28, 0x0e	; 14
     fba:	e4 e0       	ldi	r30, 0x04	; 4
     fbc:	0c 94 b1 0a 	jmp	0x1562	; 0x1562 <__epilogue_restores__+0x1c>

00000fc0 <vfprintf>:
     fc0:	ab e0       	ldi	r26, 0x0B	; 11
     fc2:	b0 e0       	ldi	r27, 0x00	; 0
     fc4:	e6 ee       	ldi	r30, 0xE6	; 230
     fc6:	f7 e0       	ldi	r31, 0x07	; 7
     fc8:	0c 94 87 0a 	jmp	0x150e	; 0x150e <__prologue_saves__>
     fcc:	6c 01       	movw	r12, r24
     fce:	7b 01       	movw	r14, r22
     fd0:	8a 01       	movw	r16, r20
     fd2:	fc 01       	movw	r30, r24
     fd4:	17 82       	std	Z+7, r1	; 0x07
     fd6:	16 82       	std	Z+6, r1	; 0x06
     fd8:	83 81       	ldd	r24, Z+3	; 0x03
     fda:	81 ff       	sbrs	r24, 1
     fdc:	cc c1       	rjmp	.+920    	; 0x1376 <vfprintf+0x3b6>
     fde:	ce 01       	movw	r24, r28
     fe0:	01 96       	adiw	r24, 0x01	; 1
     fe2:	3c 01       	movw	r6, r24
     fe4:	f6 01       	movw	r30, r12
     fe6:	93 81       	ldd	r25, Z+3	; 0x03
     fe8:	f7 01       	movw	r30, r14
     fea:	93 fd       	sbrc	r25, 3
     fec:	85 91       	lpm	r24, Z+
     fee:	93 ff       	sbrs	r25, 3
     ff0:	81 91       	ld	r24, Z+
     ff2:	7f 01       	movw	r14, r30
     ff4:	88 23       	and	r24, r24
     ff6:	09 f4       	brne	.+2      	; 0xffa <vfprintf+0x3a>
     ff8:	ba c1       	rjmp	.+884    	; 0x136e <vfprintf+0x3ae>
     ffa:	85 32       	cpi	r24, 0x25	; 37
     ffc:	39 f4       	brne	.+14     	; 0x100c <vfprintf+0x4c>
     ffe:	93 fd       	sbrc	r25, 3
    1000:	85 91       	lpm	r24, Z+
    1002:	93 ff       	sbrs	r25, 3
    1004:	81 91       	ld	r24, Z+
    1006:	7f 01       	movw	r14, r30
    1008:	85 32       	cpi	r24, 0x25	; 37
    100a:	29 f4       	brne	.+10     	; 0x1016 <vfprintf+0x56>
    100c:	b6 01       	movw	r22, r12
    100e:	90 e0       	ldi	r25, 0x00	; 0
    1010:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1014:	e7 cf       	rjmp	.-50     	; 0xfe4 <vfprintf+0x24>
    1016:	91 2c       	mov	r9, r1
    1018:	21 2c       	mov	r2, r1
    101a:	31 2c       	mov	r3, r1
    101c:	ff e1       	ldi	r31, 0x1F	; 31
    101e:	f3 15       	cp	r31, r3
    1020:	d8 f0       	brcs	.+54     	; 0x1058 <vfprintf+0x98>
    1022:	8b 32       	cpi	r24, 0x2B	; 43
    1024:	79 f0       	breq	.+30     	; 0x1044 <vfprintf+0x84>
    1026:	38 f4       	brcc	.+14     	; 0x1036 <vfprintf+0x76>
    1028:	80 32       	cpi	r24, 0x20	; 32
    102a:	79 f0       	breq	.+30     	; 0x104a <vfprintf+0x8a>
    102c:	83 32       	cpi	r24, 0x23	; 35
    102e:	a1 f4       	brne	.+40     	; 0x1058 <vfprintf+0x98>
    1030:	23 2d       	mov	r18, r3
    1032:	20 61       	ori	r18, 0x10	; 16
    1034:	1d c0       	rjmp	.+58     	; 0x1070 <vfprintf+0xb0>
    1036:	8d 32       	cpi	r24, 0x2D	; 45
    1038:	61 f0       	breq	.+24     	; 0x1052 <vfprintf+0x92>
    103a:	80 33       	cpi	r24, 0x30	; 48
    103c:	69 f4       	brne	.+26     	; 0x1058 <vfprintf+0x98>
    103e:	23 2d       	mov	r18, r3
    1040:	21 60       	ori	r18, 0x01	; 1
    1042:	16 c0       	rjmp	.+44     	; 0x1070 <vfprintf+0xb0>
    1044:	83 2d       	mov	r24, r3
    1046:	82 60       	ori	r24, 0x02	; 2
    1048:	38 2e       	mov	r3, r24
    104a:	e3 2d       	mov	r30, r3
    104c:	e4 60       	ori	r30, 0x04	; 4
    104e:	3e 2e       	mov	r3, r30
    1050:	2a c0       	rjmp	.+84     	; 0x10a6 <vfprintf+0xe6>
    1052:	f3 2d       	mov	r31, r3
    1054:	f8 60       	ori	r31, 0x08	; 8
    1056:	1d c0       	rjmp	.+58     	; 0x1092 <vfprintf+0xd2>
    1058:	37 fc       	sbrc	r3, 7
    105a:	2d c0       	rjmp	.+90     	; 0x10b6 <vfprintf+0xf6>
    105c:	20 ed       	ldi	r18, 0xD0	; 208
    105e:	28 0f       	add	r18, r24
    1060:	2a 30       	cpi	r18, 0x0A	; 10
    1062:	40 f0       	brcs	.+16     	; 0x1074 <vfprintf+0xb4>
    1064:	8e 32       	cpi	r24, 0x2E	; 46
    1066:	b9 f4       	brne	.+46     	; 0x1096 <vfprintf+0xd6>
    1068:	36 fc       	sbrc	r3, 6
    106a:	81 c1       	rjmp	.+770    	; 0x136e <vfprintf+0x3ae>
    106c:	23 2d       	mov	r18, r3
    106e:	20 64       	ori	r18, 0x40	; 64
    1070:	32 2e       	mov	r3, r18
    1072:	19 c0       	rjmp	.+50     	; 0x10a6 <vfprintf+0xe6>
    1074:	36 fe       	sbrs	r3, 6
    1076:	06 c0       	rjmp	.+12     	; 0x1084 <vfprintf+0xc4>
    1078:	8a e0       	ldi	r24, 0x0A	; 10
    107a:	98 9e       	mul	r9, r24
    107c:	20 0d       	add	r18, r0
    107e:	11 24       	eor	r1, r1
    1080:	92 2e       	mov	r9, r18
    1082:	11 c0       	rjmp	.+34     	; 0x10a6 <vfprintf+0xe6>
    1084:	ea e0       	ldi	r30, 0x0A	; 10
    1086:	2e 9e       	mul	r2, r30
    1088:	20 0d       	add	r18, r0
    108a:	11 24       	eor	r1, r1
    108c:	22 2e       	mov	r2, r18
    108e:	f3 2d       	mov	r31, r3
    1090:	f0 62       	ori	r31, 0x20	; 32
    1092:	3f 2e       	mov	r3, r31
    1094:	08 c0       	rjmp	.+16     	; 0x10a6 <vfprintf+0xe6>
    1096:	8c 36       	cpi	r24, 0x6C	; 108
    1098:	21 f4       	brne	.+8      	; 0x10a2 <vfprintf+0xe2>
    109a:	83 2d       	mov	r24, r3
    109c:	80 68       	ori	r24, 0x80	; 128
    109e:	38 2e       	mov	r3, r24
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <vfprintf+0xe6>
    10a2:	88 36       	cpi	r24, 0x68	; 104
    10a4:	41 f4       	brne	.+16     	; 0x10b6 <vfprintf+0xf6>
    10a6:	f7 01       	movw	r30, r14
    10a8:	93 fd       	sbrc	r25, 3
    10aa:	85 91       	lpm	r24, Z+
    10ac:	93 ff       	sbrs	r25, 3
    10ae:	81 91       	ld	r24, Z+
    10b0:	7f 01       	movw	r14, r30
    10b2:	81 11       	cpse	r24, r1
    10b4:	b3 cf       	rjmp	.-154    	; 0x101c <vfprintf+0x5c>
    10b6:	98 2f       	mov	r25, r24
    10b8:	9f 7d       	andi	r25, 0xDF	; 223
    10ba:	95 54       	subi	r25, 0x45	; 69
    10bc:	93 30       	cpi	r25, 0x03	; 3
    10be:	28 f4       	brcc	.+10     	; 0x10ca <vfprintf+0x10a>
    10c0:	0c 5f       	subi	r16, 0xFC	; 252
    10c2:	1f 4f       	sbci	r17, 0xFF	; 255
    10c4:	9f e3       	ldi	r25, 0x3F	; 63
    10c6:	99 83       	std	Y+1, r25	; 0x01
    10c8:	0d c0       	rjmp	.+26     	; 0x10e4 <vfprintf+0x124>
    10ca:	83 36       	cpi	r24, 0x63	; 99
    10cc:	31 f0       	breq	.+12     	; 0x10da <vfprintf+0x11a>
    10ce:	83 37       	cpi	r24, 0x73	; 115
    10d0:	71 f0       	breq	.+28     	; 0x10ee <vfprintf+0x12e>
    10d2:	83 35       	cpi	r24, 0x53	; 83
    10d4:	09 f0       	breq	.+2      	; 0x10d8 <vfprintf+0x118>
    10d6:	59 c0       	rjmp	.+178    	; 0x118a <vfprintf+0x1ca>
    10d8:	21 c0       	rjmp	.+66     	; 0x111c <vfprintf+0x15c>
    10da:	f8 01       	movw	r30, r16
    10dc:	80 81       	ld	r24, Z
    10de:	89 83       	std	Y+1, r24	; 0x01
    10e0:	0e 5f       	subi	r16, 0xFE	; 254
    10e2:	1f 4f       	sbci	r17, 0xFF	; 255
    10e4:	88 24       	eor	r8, r8
    10e6:	83 94       	inc	r8
    10e8:	91 2c       	mov	r9, r1
    10ea:	53 01       	movw	r10, r6
    10ec:	13 c0       	rjmp	.+38     	; 0x1114 <vfprintf+0x154>
    10ee:	28 01       	movw	r4, r16
    10f0:	f2 e0       	ldi	r31, 0x02	; 2
    10f2:	4f 0e       	add	r4, r31
    10f4:	51 1c       	adc	r5, r1
    10f6:	f8 01       	movw	r30, r16
    10f8:	a0 80       	ld	r10, Z
    10fa:	b1 80       	ldd	r11, Z+1	; 0x01
    10fc:	36 fe       	sbrs	r3, 6
    10fe:	03 c0       	rjmp	.+6      	; 0x1106 <vfprintf+0x146>
    1100:	69 2d       	mov	r22, r9
    1102:	70 e0       	ldi	r23, 0x00	; 0
    1104:	02 c0       	rjmp	.+4      	; 0x110a <vfprintf+0x14a>
    1106:	6f ef       	ldi	r22, 0xFF	; 255
    1108:	7f ef       	ldi	r23, 0xFF	; 255
    110a:	c5 01       	movw	r24, r10
    110c:	0e 94 cc 09 	call	0x1398	; 0x1398 <strnlen>
    1110:	4c 01       	movw	r8, r24
    1112:	82 01       	movw	r16, r4
    1114:	f3 2d       	mov	r31, r3
    1116:	ff 77       	andi	r31, 0x7F	; 127
    1118:	3f 2e       	mov	r3, r31
    111a:	16 c0       	rjmp	.+44     	; 0x1148 <vfprintf+0x188>
    111c:	28 01       	movw	r4, r16
    111e:	22 e0       	ldi	r18, 0x02	; 2
    1120:	42 0e       	add	r4, r18
    1122:	51 1c       	adc	r5, r1
    1124:	f8 01       	movw	r30, r16
    1126:	a0 80       	ld	r10, Z
    1128:	b1 80       	ldd	r11, Z+1	; 0x01
    112a:	36 fe       	sbrs	r3, 6
    112c:	03 c0       	rjmp	.+6      	; 0x1134 <vfprintf+0x174>
    112e:	69 2d       	mov	r22, r9
    1130:	70 e0       	ldi	r23, 0x00	; 0
    1132:	02 c0       	rjmp	.+4      	; 0x1138 <vfprintf+0x178>
    1134:	6f ef       	ldi	r22, 0xFF	; 255
    1136:	7f ef       	ldi	r23, 0xFF	; 255
    1138:	c5 01       	movw	r24, r10
    113a:	0e 94 c1 09 	call	0x1382	; 0x1382 <strnlen_P>
    113e:	4c 01       	movw	r8, r24
    1140:	f3 2d       	mov	r31, r3
    1142:	f0 68       	ori	r31, 0x80	; 128
    1144:	3f 2e       	mov	r3, r31
    1146:	82 01       	movw	r16, r4
    1148:	33 fc       	sbrc	r3, 3
    114a:	1b c0       	rjmp	.+54     	; 0x1182 <vfprintf+0x1c2>
    114c:	82 2d       	mov	r24, r2
    114e:	90 e0       	ldi	r25, 0x00	; 0
    1150:	88 16       	cp	r8, r24
    1152:	99 06       	cpc	r9, r25
    1154:	b0 f4       	brcc	.+44     	; 0x1182 <vfprintf+0x1c2>
    1156:	b6 01       	movw	r22, r12
    1158:	80 e2       	ldi	r24, 0x20	; 32
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1160:	2a 94       	dec	r2
    1162:	f4 cf       	rjmp	.-24     	; 0x114c <vfprintf+0x18c>
    1164:	f5 01       	movw	r30, r10
    1166:	37 fc       	sbrc	r3, 7
    1168:	85 91       	lpm	r24, Z+
    116a:	37 fe       	sbrs	r3, 7
    116c:	81 91       	ld	r24, Z+
    116e:	5f 01       	movw	r10, r30
    1170:	b6 01       	movw	r22, r12
    1172:	90 e0       	ldi	r25, 0x00	; 0
    1174:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1178:	21 10       	cpse	r2, r1
    117a:	2a 94       	dec	r2
    117c:	21 e0       	ldi	r18, 0x01	; 1
    117e:	82 1a       	sub	r8, r18
    1180:	91 08       	sbc	r9, r1
    1182:	81 14       	cp	r8, r1
    1184:	91 04       	cpc	r9, r1
    1186:	71 f7       	brne	.-36     	; 0x1164 <vfprintf+0x1a4>
    1188:	e8 c0       	rjmp	.+464    	; 0x135a <vfprintf+0x39a>
    118a:	84 36       	cpi	r24, 0x64	; 100
    118c:	11 f0       	breq	.+4      	; 0x1192 <vfprintf+0x1d2>
    118e:	89 36       	cpi	r24, 0x69	; 105
    1190:	41 f5       	brne	.+80     	; 0x11e2 <vfprintf+0x222>
    1192:	f8 01       	movw	r30, r16
    1194:	37 fe       	sbrs	r3, 7
    1196:	07 c0       	rjmp	.+14     	; 0x11a6 <vfprintf+0x1e6>
    1198:	60 81       	ld	r22, Z
    119a:	71 81       	ldd	r23, Z+1	; 0x01
    119c:	82 81       	ldd	r24, Z+2	; 0x02
    119e:	93 81       	ldd	r25, Z+3	; 0x03
    11a0:	0c 5f       	subi	r16, 0xFC	; 252
    11a2:	1f 4f       	sbci	r17, 0xFF	; 255
    11a4:	08 c0       	rjmp	.+16     	; 0x11b6 <vfprintf+0x1f6>
    11a6:	60 81       	ld	r22, Z
    11a8:	71 81       	ldd	r23, Z+1	; 0x01
    11aa:	07 2e       	mov	r0, r23
    11ac:	00 0c       	add	r0, r0
    11ae:	88 0b       	sbc	r24, r24
    11b0:	99 0b       	sbc	r25, r25
    11b2:	0e 5f       	subi	r16, 0xFE	; 254
    11b4:	1f 4f       	sbci	r17, 0xFF	; 255
    11b6:	f3 2d       	mov	r31, r3
    11b8:	ff 76       	andi	r31, 0x6F	; 111
    11ba:	3f 2e       	mov	r3, r31
    11bc:	97 ff       	sbrs	r25, 7
    11be:	09 c0       	rjmp	.+18     	; 0x11d2 <vfprintf+0x212>
    11c0:	90 95       	com	r25
    11c2:	80 95       	com	r24
    11c4:	70 95       	com	r23
    11c6:	61 95       	neg	r22
    11c8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ca:	8f 4f       	sbci	r24, 0xFF	; 255
    11cc:	9f 4f       	sbci	r25, 0xFF	; 255
    11ce:	f0 68       	ori	r31, 0x80	; 128
    11d0:	3f 2e       	mov	r3, r31
    11d2:	2a e0       	ldi	r18, 0x0A	; 10
    11d4:	30 e0       	ldi	r19, 0x00	; 0
    11d6:	a3 01       	movw	r20, r6
    11d8:	0e 94 13 0a 	call	0x1426	; 0x1426 <__ultoa_invert>
    11dc:	88 2e       	mov	r8, r24
    11de:	86 18       	sub	r8, r6
    11e0:	45 c0       	rjmp	.+138    	; 0x126c <vfprintf+0x2ac>
    11e2:	85 37       	cpi	r24, 0x75	; 117
    11e4:	31 f4       	brne	.+12     	; 0x11f2 <vfprintf+0x232>
    11e6:	23 2d       	mov	r18, r3
    11e8:	2f 7e       	andi	r18, 0xEF	; 239
    11ea:	b2 2e       	mov	r11, r18
    11ec:	2a e0       	ldi	r18, 0x0A	; 10
    11ee:	30 e0       	ldi	r19, 0x00	; 0
    11f0:	25 c0       	rjmp	.+74     	; 0x123c <vfprintf+0x27c>
    11f2:	93 2d       	mov	r25, r3
    11f4:	99 7f       	andi	r25, 0xF9	; 249
    11f6:	b9 2e       	mov	r11, r25
    11f8:	8f 36       	cpi	r24, 0x6F	; 111
    11fa:	c1 f0       	breq	.+48     	; 0x122c <vfprintf+0x26c>
    11fc:	18 f4       	brcc	.+6      	; 0x1204 <vfprintf+0x244>
    11fe:	88 35       	cpi	r24, 0x58	; 88
    1200:	79 f0       	breq	.+30     	; 0x1220 <vfprintf+0x260>
    1202:	b5 c0       	rjmp	.+362    	; 0x136e <vfprintf+0x3ae>
    1204:	80 37       	cpi	r24, 0x70	; 112
    1206:	19 f0       	breq	.+6      	; 0x120e <vfprintf+0x24e>
    1208:	88 37       	cpi	r24, 0x78	; 120
    120a:	21 f0       	breq	.+8      	; 0x1214 <vfprintf+0x254>
    120c:	b0 c0       	rjmp	.+352    	; 0x136e <vfprintf+0x3ae>
    120e:	e9 2f       	mov	r30, r25
    1210:	e0 61       	ori	r30, 0x10	; 16
    1212:	be 2e       	mov	r11, r30
    1214:	b4 fe       	sbrs	r11, 4
    1216:	0d c0       	rjmp	.+26     	; 0x1232 <vfprintf+0x272>
    1218:	fb 2d       	mov	r31, r11
    121a:	f4 60       	ori	r31, 0x04	; 4
    121c:	bf 2e       	mov	r11, r31
    121e:	09 c0       	rjmp	.+18     	; 0x1232 <vfprintf+0x272>
    1220:	34 fe       	sbrs	r3, 4
    1222:	0a c0       	rjmp	.+20     	; 0x1238 <vfprintf+0x278>
    1224:	29 2f       	mov	r18, r25
    1226:	26 60       	ori	r18, 0x06	; 6
    1228:	b2 2e       	mov	r11, r18
    122a:	06 c0       	rjmp	.+12     	; 0x1238 <vfprintf+0x278>
    122c:	28 e0       	ldi	r18, 0x08	; 8
    122e:	30 e0       	ldi	r19, 0x00	; 0
    1230:	05 c0       	rjmp	.+10     	; 0x123c <vfprintf+0x27c>
    1232:	20 e1       	ldi	r18, 0x10	; 16
    1234:	30 e0       	ldi	r19, 0x00	; 0
    1236:	02 c0       	rjmp	.+4      	; 0x123c <vfprintf+0x27c>
    1238:	20 e1       	ldi	r18, 0x10	; 16
    123a:	32 e0       	ldi	r19, 0x02	; 2
    123c:	f8 01       	movw	r30, r16
    123e:	b7 fe       	sbrs	r11, 7
    1240:	07 c0       	rjmp	.+14     	; 0x1250 <vfprintf+0x290>
    1242:	60 81       	ld	r22, Z
    1244:	71 81       	ldd	r23, Z+1	; 0x01
    1246:	82 81       	ldd	r24, Z+2	; 0x02
    1248:	93 81       	ldd	r25, Z+3	; 0x03
    124a:	0c 5f       	subi	r16, 0xFC	; 252
    124c:	1f 4f       	sbci	r17, 0xFF	; 255
    124e:	06 c0       	rjmp	.+12     	; 0x125c <vfprintf+0x29c>
    1250:	60 81       	ld	r22, Z
    1252:	71 81       	ldd	r23, Z+1	; 0x01
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	90 e0       	ldi	r25, 0x00	; 0
    1258:	0e 5f       	subi	r16, 0xFE	; 254
    125a:	1f 4f       	sbci	r17, 0xFF	; 255
    125c:	a3 01       	movw	r20, r6
    125e:	0e 94 13 0a 	call	0x1426	; 0x1426 <__ultoa_invert>
    1262:	88 2e       	mov	r8, r24
    1264:	86 18       	sub	r8, r6
    1266:	fb 2d       	mov	r31, r11
    1268:	ff 77       	andi	r31, 0x7F	; 127
    126a:	3f 2e       	mov	r3, r31
    126c:	36 fe       	sbrs	r3, 6
    126e:	0d c0       	rjmp	.+26     	; 0x128a <vfprintf+0x2ca>
    1270:	23 2d       	mov	r18, r3
    1272:	2e 7f       	andi	r18, 0xFE	; 254
    1274:	a2 2e       	mov	r10, r18
    1276:	89 14       	cp	r8, r9
    1278:	58 f4       	brcc	.+22     	; 0x1290 <vfprintf+0x2d0>
    127a:	34 fe       	sbrs	r3, 4
    127c:	0b c0       	rjmp	.+22     	; 0x1294 <vfprintf+0x2d4>
    127e:	32 fc       	sbrc	r3, 2
    1280:	09 c0       	rjmp	.+18     	; 0x1294 <vfprintf+0x2d4>
    1282:	83 2d       	mov	r24, r3
    1284:	8e 7e       	andi	r24, 0xEE	; 238
    1286:	a8 2e       	mov	r10, r24
    1288:	05 c0       	rjmp	.+10     	; 0x1294 <vfprintf+0x2d4>
    128a:	b8 2c       	mov	r11, r8
    128c:	a3 2c       	mov	r10, r3
    128e:	03 c0       	rjmp	.+6      	; 0x1296 <vfprintf+0x2d6>
    1290:	b8 2c       	mov	r11, r8
    1292:	01 c0       	rjmp	.+2      	; 0x1296 <vfprintf+0x2d6>
    1294:	b9 2c       	mov	r11, r9
    1296:	a4 fe       	sbrs	r10, 4
    1298:	0f c0       	rjmp	.+30     	; 0x12b8 <vfprintf+0x2f8>
    129a:	fe 01       	movw	r30, r28
    129c:	e8 0d       	add	r30, r8
    129e:	f1 1d       	adc	r31, r1
    12a0:	80 81       	ld	r24, Z
    12a2:	80 33       	cpi	r24, 0x30	; 48
    12a4:	21 f4       	brne	.+8      	; 0x12ae <vfprintf+0x2ee>
    12a6:	9a 2d       	mov	r25, r10
    12a8:	99 7e       	andi	r25, 0xE9	; 233
    12aa:	a9 2e       	mov	r10, r25
    12ac:	09 c0       	rjmp	.+18     	; 0x12c0 <vfprintf+0x300>
    12ae:	a2 fe       	sbrs	r10, 2
    12b0:	06 c0       	rjmp	.+12     	; 0x12be <vfprintf+0x2fe>
    12b2:	b3 94       	inc	r11
    12b4:	b3 94       	inc	r11
    12b6:	04 c0       	rjmp	.+8      	; 0x12c0 <vfprintf+0x300>
    12b8:	8a 2d       	mov	r24, r10
    12ba:	86 78       	andi	r24, 0x86	; 134
    12bc:	09 f0       	breq	.+2      	; 0x12c0 <vfprintf+0x300>
    12be:	b3 94       	inc	r11
    12c0:	a3 fc       	sbrc	r10, 3
    12c2:	11 c0       	rjmp	.+34     	; 0x12e6 <vfprintf+0x326>
    12c4:	a0 fe       	sbrs	r10, 0
    12c6:	06 c0       	rjmp	.+12     	; 0x12d4 <vfprintf+0x314>
    12c8:	b2 14       	cp	r11, r2
    12ca:	88 f4       	brcc	.+34     	; 0x12ee <vfprintf+0x32e>
    12cc:	28 0c       	add	r2, r8
    12ce:	92 2c       	mov	r9, r2
    12d0:	9b 18       	sub	r9, r11
    12d2:	0e c0       	rjmp	.+28     	; 0x12f0 <vfprintf+0x330>
    12d4:	b2 14       	cp	r11, r2
    12d6:	60 f4       	brcc	.+24     	; 0x12f0 <vfprintf+0x330>
    12d8:	b6 01       	movw	r22, r12
    12da:	80 e2       	ldi	r24, 0x20	; 32
    12dc:	90 e0       	ldi	r25, 0x00	; 0
    12de:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    12e2:	b3 94       	inc	r11
    12e4:	f7 cf       	rjmp	.-18     	; 0x12d4 <vfprintf+0x314>
    12e6:	b2 14       	cp	r11, r2
    12e8:	18 f4       	brcc	.+6      	; 0x12f0 <vfprintf+0x330>
    12ea:	2b 18       	sub	r2, r11
    12ec:	02 c0       	rjmp	.+4      	; 0x12f2 <vfprintf+0x332>
    12ee:	98 2c       	mov	r9, r8
    12f0:	21 2c       	mov	r2, r1
    12f2:	a4 fe       	sbrs	r10, 4
    12f4:	10 c0       	rjmp	.+32     	; 0x1316 <vfprintf+0x356>
    12f6:	b6 01       	movw	r22, r12
    12f8:	80 e3       	ldi	r24, 0x30	; 48
    12fa:	90 e0       	ldi	r25, 0x00	; 0
    12fc:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1300:	a2 fe       	sbrs	r10, 2
    1302:	17 c0       	rjmp	.+46     	; 0x1332 <vfprintf+0x372>
    1304:	a1 fc       	sbrc	r10, 1
    1306:	03 c0       	rjmp	.+6      	; 0x130e <vfprintf+0x34e>
    1308:	88 e7       	ldi	r24, 0x78	; 120
    130a:	90 e0       	ldi	r25, 0x00	; 0
    130c:	02 c0       	rjmp	.+4      	; 0x1312 <vfprintf+0x352>
    130e:	88 e5       	ldi	r24, 0x58	; 88
    1310:	90 e0       	ldi	r25, 0x00	; 0
    1312:	b6 01       	movw	r22, r12
    1314:	0c c0       	rjmp	.+24     	; 0x132e <vfprintf+0x36e>
    1316:	8a 2d       	mov	r24, r10
    1318:	86 78       	andi	r24, 0x86	; 134
    131a:	59 f0       	breq	.+22     	; 0x1332 <vfprintf+0x372>
    131c:	a1 fe       	sbrs	r10, 1
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <vfprintf+0x364>
    1320:	8b e2       	ldi	r24, 0x2B	; 43
    1322:	01 c0       	rjmp	.+2      	; 0x1326 <vfprintf+0x366>
    1324:	80 e2       	ldi	r24, 0x20	; 32
    1326:	a7 fc       	sbrc	r10, 7
    1328:	8d e2       	ldi	r24, 0x2D	; 45
    132a:	b6 01       	movw	r22, r12
    132c:	90 e0       	ldi	r25, 0x00	; 0
    132e:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1332:	89 14       	cp	r8, r9
    1334:	38 f4       	brcc	.+14     	; 0x1344 <vfprintf+0x384>
    1336:	b6 01       	movw	r22, r12
    1338:	80 e3       	ldi	r24, 0x30	; 48
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1340:	9a 94       	dec	r9
    1342:	f7 cf       	rjmp	.-18     	; 0x1332 <vfprintf+0x372>
    1344:	8a 94       	dec	r8
    1346:	f3 01       	movw	r30, r6
    1348:	e8 0d       	add	r30, r8
    134a:	f1 1d       	adc	r31, r1
    134c:	80 81       	ld	r24, Z
    134e:	b6 01       	movw	r22, r12
    1350:	90 e0       	ldi	r25, 0x00	; 0
    1352:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    1356:	81 10       	cpse	r8, r1
    1358:	f5 cf       	rjmp	.-22     	; 0x1344 <vfprintf+0x384>
    135a:	22 20       	and	r2, r2
    135c:	09 f4       	brne	.+2      	; 0x1360 <vfprintf+0x3a0>
    135e:	42 ce       	rjmp	.-892    	; 0xfe4 <vfprintf+0x24>
    1360:	b6 01       	movw	r22, r12
    1362:	80 e2       	ldi	r24, 0x20	; 32
    1364:	90 e0       	ldi	r25, 0x00	; 0
    1366:	0e 94 d7 09 	call	0x13ae	; 0x13ae <fputc>
    136a:	2a 94       	dec	r2
    136c:	f6 cf       	rjmp	.-20     	; 0x135a <vfprintf+0x39a>
    136e:	f6 01       	movw	r30, r12
    1370:	86 81       	ldd	r24, Z+6	; 0x06
    1372:	97 81       	ldd	r25, Z+7	; 0x07
    1374:	02 c0       	rjmp	.+4      	; 0x137a <vfprintf+0x3ba>
    1376:	8f ef       	ldi	r24, 0xFF	; 255
    1378:	9f ef       	ldi	r25, 0xFF	; 255
    137a:	2b 96       	adiw	r28, 0x0b	; 11
    137c:	e2 e1       	ldi	r30, 0x12	; 18
    137e:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__epilogue_restores__>

00001382 <strnlen_P>:
    1382:	fc 01       	movw	r30, r24
    1384:	05 90       	lpm	r0, Z+
    1386:	61 50       	subi	r22, 0x01	; 1
    1388:	70 40       	sbci	r23, 0x00	; 0
    138a:	01 10       	cpse	r0, r1
    138c:	d8 f7       	brcc	.-10     	; 0x1384 <strnlen_P+0x2>
    138e:	80 95       	com	r24
    1390:	90 95       	com	r25
    1392:	8e 0f       	add	r24, r30
    1394:	9f 1f       	adc	r25, r31
    1396:	08 95       	ret

00001398 <strnlen>:
    1398:	fc 01       	movw	r30, r24
    139a:	61 50       	subi	r22, 0x01	; 1
    139c:	70 40       	sbci	r23, 0x00	; 0
    139e:	01 90       	ld	r0, Z+
    13a0:	01 10       	cpse	r0, r1
    13a2:	d8 f7       	brcc	.-10     	; 0x139a <strnlen+0x2>
    13a4:	80 95       	com	r24
    13a6:	90 95       	com	r25
    13a8:	8e 0f       	add	r24, r30
    13aa:	9f 1f       	adc	r25, r31
    13ac:	08 95       	ret

000013ae <fputc>:
    13ae:	0f 93       	push	r16
    13b0:	1f 93       	push	r17
    13b2:	cf 93       	push	r28
    13b4:	df 93       	push	r29
    13b6:	fb 01       	movw	r30, r22
    13b8:	23 81       	ldd	r18, Z+3	; 0x03
    13ba:	21 fd       	sbrc	r18, 1
    13bc:	03 c0       	rjmp	.+6      	; 0x13c4 <fputc+0x16>
    13be:	8f ef       	ldi	r24, 0xFF	; 255
    13c0:	9f ef       	ldi	r25, 0xFF	; 255
    13c2:	2c c0       	rjmp	.+88     	; 0x141c <fputc+0x6e>
    13c4:	22 ff       	sbrs	r18, 2
    13c6:	16 c0       	rjmp	.+44     	; 0x13f4 <fputc+0x46>
    13c8:	46 81       	ldd	r20, Z+6	; 0x06
    13ca:	57 81       	ldd	r21, Z+7	; 0x07
    13cc:	24 81       	ldd	r18, Z+4	; 0x04
    13ce:	35 81       	ldd	r19, Z+5	; 0x05
    13d0:	42 17       	cp	r20, r18
    13d2:	53 07       	cpc	r21, r19
    13d4:	44 f4       	brge	.+16     	; 0x13e6 <fputc+0x38>
    13d6:	a0 81       	ld	r26, Z
    13d8:	b1 81       	ldd	r27, Z+1	; 0x01
    13da:	9d 01       	movw	r18, r26
    13dc:	2f 5f       	subi	r18, 0xFF	; 255
    13de:	3f 4f       	sbci	r19, 0xFF	; 255
    13e0:	31 83       	std	Z+1, r19	; 0x01
    13e2:	20 83       	st	Z, r18
    13e4:	8c 93       	st	X, r24
    13e6:	26 81       	ldd	r18, Z+6	; 0x06
    13e8:	37 81       	ldd	r19, Z+7	; 0x07
    13ea:	2f 5f       	subi	r18, 0xFF	; 255
    13ec:	3f 4f       	sbci	r19, 0xFF	; 255
    13ee:	37 83       	std	Z+7, r19	; 0x07
    13f0:	26 83       	std	Z+6, r18	; 0x06
    13f2:	14 c0       	rjmp	.+40     	; 0x141c <fputc+0x6e>
    13f4:	8b 01       	movw	r16, r22
    13f6:	ec 01       	movw	r28, r24
    13f8:	fb 01       	movw	r30, r22
    13fa:	00 84       	ldd	r0, Z+8	; 0x08
    13fc:	f1 85       	ldd	r31, Z+9	; 0x09
    13fe:	e0 2d       	mov	r30, r0
    1400:	09 95       	icall
    1402:	89 2b       	or	r24, r25
    1404:	e1 f6       	brne	.-72     	; 0x13be <fputc+0x10>
    1406:	d8 01       	movw	r26, r16
    1408:	16 96       	adiw	r26, 0x06	; 6
    140a:	8d 91       	ld	r24, X+
    140c:	9c 91       	ld	r25, X
    140e:	17 97       	sbiw	r26, 0x07	; 7
    1410:	01 96       	adiw	r24, 0x01	; 1
    1412:	17 96       	adiw	r26, 0x07	; 7
    1414:	9c 93       	st	X, r25
    1416:	8e 93       	st	-X, r24
    1418:	16 97       	sbiw	r26, 0x06	; 6
    141a:	ce 01       	movw	r24, r28
    141c:	df 91       	pop	r29
    141e:	cf 91       	pop	r28
    1420:	1f 91       	pop	r17
    1422:	0f 91       	pop	r16
    1424:	08 95       	ret

00001426 <__ultoa_invert>:
    1426:	fa 01       	movw	r30, r20
    1428:	aa 27       	eor	r26, r26
    142a:	28 30       	cpi	r18, 0x08	; 8
    142c:	51 f1       	breq	.+84     	; 0x1482 <__ultoa_invert+0x5c>
    142e:	20 31       	cpi	r18, 0x10	; 16
    1430:	81 f1       	breq	.+96     	; 0x1492 <__ultoa_invert+0x6c>
    1432:	e8 94       	clt
    1434:	6f 93       	push	r22
    1436:	6e 7f       	andi	r22, 0xFE	; 254
    1438:	6e 5f       	subi	r22, 0xFE	; 254
    143a:	7f 4f       	sbci	r23, 0xFF	; 255
    143c:	8f 4f       	sbci	r24, 0xFF	; 255
    143e:	9f 4f       	sbci	r25, 0xFF	; 255
    1440:	af 4f       	sbci	r26, 0xFF	; 255
    1442:	b1 e0       	ldi	r27, 0x01	; 1
    1444:	3e d0       	rcall	.+124    	; 0x14c2 <__ultoa_invert+0x9c>
    1446:	b4 e0       	ldi	r27, 0x04	; 4
    1448:	3c d0       	rcall	.+120    	; 0x14c2 <__ultoa_invert+0x9c>
    144a:	67 0f       	add	r22, r23
    144c:	78 1f       	adc	r23, r24
    144e:	89 1f       	adc	r24, r25
    1450:	9a 1f       	adc	r25, r26
    1452:	a1 1d       	adc	r26, r1
    1454:	68 0f       	add	r22, r24
    1456:	79 1f       	adc	r23, r25
    1458:	8a 1f       	adc	r24, r26
    145a:	91 1d       	adc	r25, r1
    145c:	a1 1d       	adc	r26, r1
    145e:	6a 0f       	add	r22, r26
    1460:	71 1d       	adc	r23, r1
    1462:	81 1d       	adc	r24, r1
    1464:	91 1d       	adc	r25, r1
    1466:	a1 1d       	adc	r26, r1
    1468:	20 d0       	rcall	.+64     	; 0x14aa <__ultoa_invert+0x84>
    146a:	09 f4       	brne	.+2      	; 0x146e <__ultoa_invert+0x48>
    146c:	68 94       	set
    146e:	3f 91       	pop	r19
    1470:	2a e0       	ldi	r18, 0x0A	; 10
    1472:	26 9f       	mul	r18, r22
    1474:	11 24       	eor	r1, r1
    1476:	30 19       	sub	r19, r0
    1478:	30 5d       	subi	r19, 0xD0	; 208
    147a:	31 93       	st	Z+, r19
    147c:	de f6       	brtc	.-74     	; 0x1434 <__ultoa_invert+0xe>
    147e:	cf 01       	movw	r24, r30
    1480:	08 95       	ret
    1482:	46 2f       	mov	r20, r22
    1484:	47 70       	andi	r20, 0x07	; 7
    1486:	40 5d       	subi	r20, 0xD0	; 208
    1488:	41 93       	st	Z+, r20
    148a:	b3 e0       	ldi	r27, 0x03	; 3
    148c:	0f d0       	rcall	.+30     	; 0x14ac <__ultoa_invert+0x86>
    148e:	c9 f7       	brne	.-14     	; 0x1482 <__ultoa_invert+0x5c>
    1490:	f6 cf       	rjmp	.-20     	; 0x147e <__ultoa_invert+0x58>
    1492:	46 2f       	mov	r20, r22
    1494:	4f 70       	andi	r20, 0x0F	; 15
    1496:	40 5d       	subi	r20, 0xD0	; 208
    1498:	4a 33       	cpi	r20, 0x3A	; 58
    149a:	18 f0       	brcs	.+6      	; 0x14a2 <__ultoa_invert+0x7c>
    149c:	49 5d       	subi	r20, 0xD9	; 217
    149e:	31 fd       	sbrc	r19, 1
    14a0:	40 52       	subi	r20, 0x20	; 32
    14a2:	41 93       	st	Z+, r20
    14a4:	02 d0       	rcall	.+4      	; 0x14aa <__ultoa_invert+0x84>
    14a6:	a9 f7       	brne	.-22     	; 0x1492 <__ultoa_invert+0x6c>
    14a8:	ea cf       	rjmp	.-44     	; 0x147e <__ultoa_invert+0x58>
    14aa:	b4 e0       	ldi	r27, 0x04	; 4
    14ac:	a6 95       	lsr	r26
    14ae:	97 95       	ror	r25
    14b0:	87 95       	ror	r24
    14b2:	77 95       	ror	r23
    14b4:	67 95       	ror	r22
    14b6:	ba 95       	dec	r27
    14b8:	c9 f7       	brne	.-14     	; 0x14ac <__ultoa_invert+0x86>
    14ba:	00 97       	sbiw	r24, 0x00	; 0
    14bc:	61 05       	cpc	r22, r1
    14be:	71 05       	cpc	r23, r1
    14c0:	08 95       	ret
    14c2:	9b 01       	movw	r18, r22
    14c4:	ac 01       	movw	r20, r24
    14c6:	0a 2e       	mov	r0, r26
    14c8:	06 94       	lsr	r0
    14ca:	57 95       	ror	r21
    14cc:	47 95       	ror	r20
    14ce:	37 95       	ror	r19
    14d0:	27 95       	ror	r18
    14d2:	ba 95       	dec	r27
    14d4:	c9 f7       	brne	.-14     	; 0x14c8 <__ultoa_invert+0xa2>
    14d6:	62 0f       	add	r22, r18
    14d8:	73 1f       	adc	r23, r19
    14da:	84 1f       	adc	r24, r20
    14dc:	95 1f       	adc	r25, r21
    14de:	a0 1d       	adc	r26, r0
    14e0:	08 95       	ret

000014e2 <eeprom_read_byte>:
    14e2:	f9 99       	sbic	0x1f, 1	; 31
    14e4:	fe cf       	rjmp	.-4      	; 0x14e2 <eeprom_read_byte>
    14e6:	92 bd       	out	0x22, r25	; 34
    14e8:	81 bd       	out	0x21, r24	; 33
    14ea:	f8 9a       	sbi	0x1f, 0	; 31
    14ec:	99 27       	eor	r25, r25
    14ee:	80 b5       	in	r24, 0x20	; 32
    14f0:	08 95       	ret

000014f2 <eeprom_write_byte>:
    14f2:	26 2f       	mov	r18, r22

000014f4 <eeprom_write_r18>:
    14f4:	f9 99       	sbic	0x1f, 1	; 31
    14f6:	fe cf       	rjmp	.-4      	; 0x14f4 <eeprom_write_r18>
    14f8:	1f ba       	out	0x1f, r1	; 31
    14fa:	92 bd       	out	0x22, r25	; 34
    14fc:	81 bd       	out	0x21, r24	; 33
    14fe:	20 bd       	out	0x20, r18	; 32
    1500:	0f b6       	in	r0, 0x3f	; 63
    1502:	f8 94       	cli
    1504:	fa 9a       	sbi	0x1f, 2	; 31
    1506:	f9 9a       	sbi	0x1f, 1	; 31
    1508:	0f be       	out	0x3f, r0	; 63
    150a:	01 96       	adiw	r24, 0x01	; 1
    150c:	08 95       	ret

0000150e <__prologue_saves__>:
    150e:	2f 92       	push	r2
    1510:	3f 92       	push	r3
    1512:	4f 92       	push	r4
    1514:	5f 92       	push	r5
    1516:	6f 92       	push	r6
    1518:	7f 92       	push	r7
    151a:	8f 92       	push	r8
    151c:	9f 92       	push	r9
    151e:	af 92       	push	r10
    1520:	bf 92       	push	r11
    1522:	cf 92       	push	r12
    1524:	df 92       	push	r13
    1526:	ef 92       	push	r14
    1528:	ff 92       	push	r15
    152a:	0f 93       	push	r16
    152c:	1f 93       	push	r17
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	cd b7       	in	r28, 0x3d	; 61
    1534:	de b7       	in	r29, 0x3e	; 62
    1536:	ca 1b       	sub	r28, r26
    1538:	db 0b       	sbc	r29, r27
    153a:	0f b6       	in	r0, 0x3f	; 63
    153c:	f8 94       	cli
    153e:	de bf       	out	0x3e, r29	; 62
    1540:	0f be       	out	0x3f, r0	; 63
    1542:	cd bf       	out	0x3d, r28	; 61
    1544:	09 94       	ijmp

00001546 <__epilogue_restores__>:
    1546:	2a 88       	ldd	r2, Y+18	; 0x12
    1548:	39 88       	ldd	r3, Y+17	; 0x11
    154a:	48 88       	ldd	r4, Y+16	; 0x10
    154c:	5f 84       	ldd	r5, Y+15	; 0x0f
    154e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1550:	7d 84       	ldd	r7, Y+13	; 0x0d
    1552:	8c 84       	ldd	r8, Y+12	; 0x0c
    1554:	9b 84       	ldd	r9, Y+11	; 0x0b
    1556:	aa 84       	ldd	r10, Y+10	; 0x0a
    1558:	b9 84       	ldd	r11, Y+9	; 0x09
    155a:	c8 84       	ldd	r12, Y+8	; 0x08
    155c:	df 80       	ldd	r13, Y+7	; 0x07
    155e:	ee 80       	ldd	r14, Y+6	; 0x06
    1560:	fd 80       	ldd	r15, Y+5	; 0x05
    1562:	0c 81       	ldd	r16, Y+4	; 0x04
    1564:	1b 81       	ldd	r17, Y+3	; 0x03
    1566:	aa 81       	ldd	r26, Y+2	; 0x02
    1568:	b9 81       	ldd	r27, Y+1	; 0x01
    156a:	ce 0f       	add	r28, r30
    156c:	d1 1d       	adc	r29, r1
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	de bf       	out	0x3e, r29	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	ed 01       	movw	r28, r26
    157a:	08 95       	ret

0000157c <_exit>:
    157c:	f8 94       	cli

0000157e <__stop_program>:
    157e:	ff cf       	rjmp	.-2      	; 0x157e <__stop_program>
